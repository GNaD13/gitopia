syntax = "proto3";
package gitopia.gitopia.rewards;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "rewards/params.proto";
import "rewards/rewards.proto";
import "rewards/tasks.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/gitopia/gitopia/x/rewards/types";

// Query defines the gRPC querier service.
service Query {
  	// Parameters queries the parameters of the module.
  	rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    	option (google.api.http).get = "/gitopia/gitopia/rewards/params";
  	}

  	// Queries a Rewards by index.
	rpc Rewards(QueryGetRewardsRequest) returns (QueryGetRewardsResponse) {
		option (google.api.http).get = "/gitopia/gitopia/rewards/rewards/{recipient}";
	}

	// Queries a Rewards by index.
	rpc RewardForCreator(QueryGetRewardForCreatorRequest) returns (QueryGetRewardForCreatorResponse) {
		option (google.api.http).get = "/gitopia/gitopia/rewards/rewards/{recipient}";
	}

	// Queries a list of Rewards items.
	rpc RewardsAll(QueryAllRewardsRequest) returns (QueryAllRewardsResponse) {
		option (google.api.http).get = "/gitopia/gitopia/rewards/rewards";
	}

	// Queries a list of tasks items.
	rpc Tasks(QueryTasksRequest) returns (QueryTasksResponse) {
		option (google.api.http).get = "/gitopia/gitopia/rewards/tasks";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetRewardsRequest {
	  string recipient = 1;

}

message QueryGetRewardsResponse {
	Rewards rewards = 1 [(gogoproto.nullable) = false];
}

message QueryGetRewardForCreatorRequest {
	string creator = 1;
	string recipient = 2;
}

message QueryGetRewardForCreatorResponse {
  	Reward reward = 1 [(gogoproto.nullable) = false];
}

message QueryAllRewardsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRewardsResponse {
	repeated Rewards rewards = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryTasksRequest {
	string address = 1;
}

message QueryTasksResponse {
	repeated Task tasks = 1 [(gogoproto.nullable) = false];
}
// this line is used by starport scaffolding # 3
