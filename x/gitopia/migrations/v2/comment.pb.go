// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        v3.20.0
// source: gitopia/comment.proto

package types

import (
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Comment_Type int32

const (
	Comment_ISSUE       Comment_Type = 0
	Comment_PULLREQUEST Comment_Type = 1
)

// Enum value maps for Comment_Type.
var (
	Comment_Type_name = map[int32]string{
		0: "ISSUE",
		1: "PULLREQUEST",
	}
	Comment_Type_value = map[string]int32{
		"ISSUE":       0,
		"PULLREQUEST": 1,
	}
)

func (x Comment_Type) Enum() *Comment_Type {
	p := new(Comment_Type)
	*p = x
	return p
}

func (x Comment_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Comment_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_gitopia_comment_proto_enumTypes[0].Descriptor()
}

func (Comment_Type) Type() protoreflect.EnumType {
	return &file_gitopia_comment_proto_enumTypes[0]
}

func (x Comment_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Comment_Type.Descriptor instead.
func (Comment_Type) EnumDescriptor() ([]byte, []int) {
	return file_gitopia_comment_proto_rawDescGZIP(), []int{0, 0}
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator           string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id                uint64       `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	ParentId          uint64       `protobuf:"varint,3,opt,name=parentId,proto3" json:"parentId,omitempty"`
	CommentIid        uint64       `protobuf:"varint,4,opt,name=commentIid,proto3" json:"commentIid,omitempty"`
	Body              string       `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	Attachments       []string     `protobuf:"bytes,6,rep,name=attachments,proto3" json:"attachments,omitempty"`
	DiffHunk          string       `protobuf:"bytes,7,opt,name=diffHunk,proto3" json:"diffHunk,omitempty"`
	Path              string       `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	System            bool         `protobuf:"varint,9,opt,name=system,proto3" json:"system,omitempty"`
	AuthorAssociation string       `protobuf:"bytes,10,opt,name=authorAssociation,proto3" json:"authorAssociation,omitempty"`
	CreatedAt         int64        `protobuf:"varint,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt         int64        `protobuf:"varint,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	CommentType       Comment_Type `protobuf:"varint,13,opt,name=commentType,proto3,enum=gitopia.gitopia.gitopia.v2.Comment_Type" json:"commentType,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_comment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_comment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_gitopia_comment_proto_rawDescGZIP(), []int{0}
}

func (x *Comment) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Comment) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Comment) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Comment) GetCommentIid() uint64 {
	if x != nil {
		return x.CommentIid
	}
	return 0
}

func (x *Comment) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Comment) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Comment) GetDiffHunk() string {
	if x != nil {
		return x.DiffHunk
	}
	return ""
}

func (x *Comment) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Comment) GetSystem() bool {
	if x != nil {
		return x.System
	}
	return false
}

func (x *Comment) GetAuthorAssociation() string {
	if x != nil {
		return x.AuthorAssociation
	}
	return ""
}

func (x *Comment) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Comment) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Comment) GetCommentType() Comment_Type {
	if x != nil {
		return x.CommentType
	}
	return Comment_ISSUE
}

var File_gitopia_comment_proto protoreflect.FileDescriptor

var file_gitopia_comment_proto_rawDesc = []byte{
	0x0a, 0x15, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x76, 0x32, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x03, 0x0a, 0x07, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x66, 0x66, 0x48, 0x75, 0x6e, 0x6b, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x66, 0x66, 0x48, 0x75, 0x6e, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x41, 0x73, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x4a, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x22, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x53, 0x53, 0x55, 0x45,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x55, 0x4c, 0x4c, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x10, 0x01, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2f, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2f, 0x78, 0x2f, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2f, 0x6d, 0x69, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x32, 0x3b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gitopia_comment_proto_rawDescOnce sync.Once
	file_gitopia_comment_proto_rawDescData = file_gitopia_comment_proto_rawDesc
)

func file_gitopia_comment_proto_rawDescGZIP() []byte {
	file_gitopia_comment_proto_rawDescOnce.Do(func() {
		file_gitopia_comment_proto_rawDescData = protoimpl.X.CompressGZIP(file_gitopia_comment_proto_rawDescData)
	})
	return file_gitopia_comment_proto_rawDescData
}

var file_gitopia_comment_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gitopia_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gitopia_comment_proto_goTypes = []interface{}{
	(Comment_Type)(0), // 0: gitopia.gitopia.gitopia.v2.Comment.Type
	(*Comment)(nil),   // 1: gitopia.gitopia.gitopia.v2.Comment
}
var file_gitopia_comment_proto_depIdxs = []int32{
	0, // 0: gitopia.gitopia.gitopia.v2.Comment.commentType:type_name -> gitopia.gitopia.gitopia.v2.Comment.Type
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gitopia_comment_proto_init() }
func file_gitopia_comment_proto_init() {
	if File_gitopia_comment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gitopia_comment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gitopia_comment_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gitopia_comment_proto_goTypes,
		DependencyIndexes: file_gitopia_comment_proto_depIdxs,
		EnumInfos:         file_gitopia_comment_proto_enumTypes,
		MessageInfos:      file_gitopia_comment_proto_msgTypes,
	}.Build()
	File_gitopia_comment_proto = out.File
	file_gitopia_comment_proto_rawDesc = nil
	file_gitopia_comment_proto_goTypes = nil
	file_gitopia_comment_proto_depIdxs = nil
}
