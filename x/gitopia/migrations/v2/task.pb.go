// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        v3.20.0
// source: gitopia/task.proto

package types

import (
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskType int32

const (
	TaskType_TASK_TYPE_FORK_REPOSITORY        TaskType = 0
	TaskType_TASK_TYPE_SET_PULL_REQUEST_STATE TaskType = 1
)

// Enum value maps for TaskType.
var (
	TaskType_name = map[int32]string{
		0: "TASK_TYPE_FORK_REPOSITORY",
		1: "TASK_TYPE_SET_PULL_REQUEST_STATE",
	}
	TaskType_value = map[string]int32{
		"TASK_TYPE_FORK_REPOSITORY":        0,
		"TASK_TYPE_SET_PULL_REQUEST_STATE": 1,
	}
)

func (x TaskType) Enum() *TaskType {
	p := new(TaskType)
	*p = x
	return p
}

func (x TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_gitopia_task_proto_enumTypes[0].Descriptor()
}

func (TaskType) Type() protoreflect.EnumType {
	return &file_gitopia_task_proto_enumTypes[0]
}

func (x TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskType.Descriptor instead.
func (TaskType) EnumDescriptor() ([]byte, []int) {
	return file_gitopia_task_proto_rawDescGZIP(), []int{0}
}

type TaskState int32

const (
	TaskState_TASK_STATE_PENDING TaskState = 0
	TaskState_TASK_STATE_SUCCESS TaskState = 1
	TaskState_TASK_STATE_FAILURE TaskState = 2
)

// Enum value maps for TaskState.
var (
	TaskState_name = map[int32]string{
		0: "TASK_STATE_PENDING",
		1: "TASK_STATE_SUCCESS",
		2: "TASK_STATE_FAILURE",
	}
	TaskState_value = map[string]int32{
		"TASK_STATE_PENDING": 0,
		"TASK_STATE_SUCCESS": 1,
		"TASK_STATE_FAILURE": 2,
	}
)

func (x TaskState) Enum() *TaskState {
	p := new(TaskState)
	*p = x
	return p
}

func (x TaskState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskState) Descriptor() protoreflect.EnumDescriptor {
	return file_gitopia_task_proto_enumTypes[1].Descriptor()
}

func (TaskState) Type() protoreflect.EnumType {
	return &file_gitopia_task_proto_enumTypes[1]
}

func (x TaskState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskState.Descriptor instead.
func (TaskState) EnumDescriptor() ([]byte, []int) {
	return file_gitopia_task_proto_rawDescGZIP(), []int{1}
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type     TaskType  `protobuf:"varint,2,opt,name=type,proto3,enum=gitopia.gitopia.gitopia.v2.TaskType" json:"type,omitempty"`
	State    TaskState `protobuf:"varint,3,opt,name=state,proto3,enum=gitopia.gitopia.gitopia.v2.TaskState" json:"state,omitempty"`
	Message  string    `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Creator  string    `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
	Provider string    `protobuf:"bytes,6,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_gitopia_task_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Task) GetType() TaskType {
	if x != nil {
		return x.Type
	}
	return TaskType_TASK_TYPE_FORK_REPOSITORY
}

func (x *Task) GetState() TaskState {
	if x != nil {
		return x.State
	}
	return TaskState_TASK_STATE_PENDING
}

func (x *Task) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Task) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Task) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

var File_gitopia_task_proto protoreflect.FileDescriptor

var file_gitopia_task_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32,
	0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdd, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2a, 0x8a, 0x01, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x19, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x46, 0x4f, 0x52, 0x4b, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x52, 0x59,
	0x10, 0x00, 0x1a, 0x16, 0x8a, 0x9d, 0x20, 0x12, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x41, 0x0a, 0x20, 0x54, 0x41,
	0x53, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x50, 0x55, 0x4c, 0x4c,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x01,
	0x1a, 0x1b, 0x8a, 0x9d, 0x20, 0x17, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x74, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x04, 0x88,
	0xa3, 0x1e, 0x00, 0x2a, 0x8f, 0x01, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x28, 0x0a, 0x12, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x1a, 0x10, 0x8a, 0x9d, 0x20, 0x0c, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x12, 0x54,
	0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x01, 0x1a, 0x10, 0x8a, 0x9d, 0x20, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x12, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x02, 0x1a, 0x10, 0x8a,
	0x9d, 0x20, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x1a,
	0x04, 0x88, 0xa3, 0x1e, 0x00, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2f, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2f, 0x78, 0x2f, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2f, 0x6d, 0x69,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x32, 0x3b, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gitopia_task_proto_rawDescOnce sync.Once
	file_gitopia_task_proto_rawDescData = file_gitopia_task_proto_rawDesc
)

func file_gitopia_task_proto_rawDescGZIP() []byte {
	file_gitopia_task_proto_rawDescOnce.Do(func() {
		file_gitopia_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_gitopia_task_proto_rawDescData)
	})
	return file_gitopia_task_proto_rawDescData
}

var file_gitopia_task_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_gitopia_task_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_gitopia_task_proto_goTypes = []interface{}{
	(TaskType)(0),  // 0: gitopia.gitopia.gitopia.v2.TaskType
	(TaskState)(0), // 1: gitopia.gitopia.gitopia.v2.TaskState
	(*Task)(nil),   // 2: gitopia.gitopia.gitopia.v2.Task
}
var file_gitopia_task_proto_depIdxs = []int32{
	0, // 0: gitopia.gitopia.gitopia.v2.Task.type:type_name -> gitopia.gitopia.gitopia.v2.TaskType
	1, // 1: gitopia.gitopia.gitopia.v2.Task.state:type_name -> gitopia.gitopia.gitopia.v2.TaskState
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_gitopia_task_proto_init() }
func file_gitopia_task_proto_init() {
	if File_gitopia_task_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gitopia_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gitopia_task_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gitopia_task_proto_goTypes,
		DependencyIndexes: file_gitopia_task_proto_depIdxs,
		EnumInfos:         file_gitopia_task_proto_enumTypes,
		MessageInfos:      file_gitopia_task_proto_msgTypes,
	}.Build()
	File_gitopia_task_proto = out.File
	file_gitopia_task_proto_rawDesc = nil
	file_gitopia_task_proto_goTypes = nil
	file_gitopia_task_proto_depIdxs = nil
}
