// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        v3.20.0
// source: gitopia/tx.proto

package types

import (
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProviderPermission int32

const (
	ProviderPermission_GIT_SERVER ProviderPermission = 0
	ProviderPermission_STORAGE    ProviderPermission = 1
)

// Enum value maps for ProviderPermission.
var (
	ProviderPermission_name = map[int32]string{
		0: "GIT_SERVER",
		1: "STORAGE",
	}
	ProviderPermission_value = map[string]int32{
		"GIT_SERVER": 0,
		"STORAGE":    1,
	}
)

func (x ProviderPermission) Enum() *ProviderPermission {
	p := new(ProviderPermission)
	*p = x
	return p
}

func (x ProviderPermission) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProviderPermission) Descriptor() protoreflect.EnumDescriptor {
	return file_gitopia_tx_proto_enumTypes[0].Descriptor()
}

func (ProviderPermission) Type() protoreflect.EnumType {
	return &file_gitopia_tx_proto_enumTypes[0]
}

func (x ProviderPermission) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProviderPermission.Descriptor instead.
func (ProviderPermission) EnumDescriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{0}
}

type MsgRevokeProviderPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator    string             `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Granter    string             `protobuf:"bytes,2,opt,name=granter,proto3" json:"granter,omitempty"`
	Provider   string             `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	Permission ProviderPermission `protobuf:"varint,4,opt,name=permission,proto3,enum=gitopia.gitopia.gitopia.v2.ProviderPermission" json:"permission,omitempty"`
}

func (x *MsgRevokeProviderPermission) Reset() {
	*x = MsgRevokeProviderPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRevokeProviderPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRevokeProviderPermission) ProtoMessage() {}

func (x *MsgRevokeProviderPermission) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRevokeProviderPermission.ProtoReflect.Descriptor instead.
func (*MsgRevokeProviderPermission) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgRevokeProviderPermission) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRevokeProviderPermission) GetGranter() string {
	if x != nil {
		return x.Granter
	}
	return ""
}

func (x *MsgRevokeProviderPermission) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *MsgRevokeProviderPermission) GetPermission() ProviderPermission {
	if x != nil {
		return x.Permission
	}
	return ProviderPermission_GIT_SERVER
}

type MsgRevokeProviderPermissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRevokeProviderPermissionResponse) Reset() {
	*x = MsgRevokeProviderPermissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRevokeProviderPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRevokeProviderPermissionResponse) ProtoMessage() {}

func (x *MsgRevokeProviderPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRevokeProviderPermissionResponse.ProtoReflect.Descriptor instead.
func (*MsgRevokeProviderPermissionResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{1}
}

type MsgAuthorizeProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator    string             `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Granter    string             `protobuf:"bytes,2,opt,name=granter,proto3" json:"granter,omitempty"`
	Provider   string             `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	Permission ProviderPermission `protobuf:"varint,4,opt,name=permission,proto3,enum=gitopia.gitopia.gitopia.v2.ProviderPermission" json:"permission,omitempty"`
}

func (x *MsgAuthorizeProvider) Reset() {
	*x = MsgAuthorizeProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAuthorizeProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAuthorizeProvider) ProtoMessage() {}

func (x *MsgAuthorizeProvider) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAuthorizeProvider.ProtoReflect.Descriptor instead.
func (*MsgAuthorizeProvider) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgAuthorizeProvider) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgAuthorizeProvider) GetGranter() string {
	if x != nil {
		return x.Granter
	}
	return ""
}

func (x *MsgAuthorizeProvider) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *MsgAuthorizeProvider) GetPermission() ProviderPermission {
	if x != nil {
		return x.Permission
	}
	return ProviderPermission_GIT_SERVER
}

type MsgAuthorizeProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAuthorizeProviderResponse) Reset() {
	*x = MsgAuthorizeProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAuthorizeProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAuthorizeProviderResponse) ProtoMessage() {}

func (x *MsgAuthorizeProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAuthorizeProviderResponse.ProtoReflect.Descriptor instead.
func (*MsgAuthorizeProviderResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{3}
}

type MsgCreateTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator  string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TaskType TaskType `protobuf:"varint,2,opt,name=taskType,proto3,enum=gitopia.gitopia.gitopia.v2.TaskType" json:"taskType,omitempty"`
	Provider string   `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *MsgCreateTask) Reset() {
	*x = MsgCreateTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateTask) ProtoMessage() {}

func (x *MsgCreateTask) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateTask.ProtoReflect.Descriptor instead.
func (*MsgCreateTask) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgCreateTask) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreateTask) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_TASK_TYPE_FORK_REPOSITORY
}

func (x *MsgCreateTask) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type MsgCreateTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgCreateTaskResponse) Reset() {
	*x = MsgCreateTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateTaskResponse) ProtoMessage() {}

func (x *MsgCreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateTaskResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{5}
}

func (x *MsgCreateTaskResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MsgUpdateTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string    `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	State   TaskState `protobuf:"varint,3,opt,name=state,proto3,enum=gitopia.gitopia.gitopia.v2.TaskState" json:"state,omitempty"`
	Message string    `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MsgUpdateTask) Reset() {
	*x = MsgUpdateTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateTask) ProtoMessage() {}

func (x *MsgUpdateTask) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateTask.ProtoReflect.Descriptor instead.
func (*MsgUpdateTask) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgUpdateTask) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateTask) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgUpdateTask) GetState() TaskState {
	if x != nil {
		return x.State
	}
	return TaskState_TASK_STATE_PENDING
}

func (x *MsgUpdateTask) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MsgUpdateTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateTaskResponse) Reset() {
	*x = MsgUpdateTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateTaskResponse) ProtoMessage() {}

func (x *MsgUpdateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateTaskResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateTaskResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{7}
}

type MsgDeleteTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgDeleteTask) Reset() {
	*x = MsgDeleteTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteTask) ProtoMessage() {}

func (x *MsgDeleteTask) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteTask.ProtoReflect.Descriptor instead.
func (*MsgDeleteTask) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgDeleteTask) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgDeleteTask) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MsgUpdateRepositoryBackupRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string                 `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId          `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Store        RepositoryBackup_Store `protobuf:"varint,3,opt,name=store,proto3,enum=gitopia.gitopia.gitopia.v2.RepositoryBackup_Store" json:"store,omitempty"`
	Ref          string                 `protobuf:"bytes,4,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *MsgUpdateRepositoryBackupRef) Reset() {
	*x = MsgUpdateRepositoryBackupRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateRepositoryBackupRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateRepositoryBackupRef) ProtoMessage() {}

func (x *MsgUpdateRepositoryBackupRef) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateRepositoryBackupRef.ProtoReflect.Descriptor instead.
func (*MsgUpdateRepositoryBackupRef) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{9}
}

func (x *MsgUpdateRepositoryBackupRef) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateRepositoryBackupRef) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgUpdateRepositoryBackupRef) GetStore() RepositoryBackup_Store {
	if x != nil {
		return x.Store
	}
	return RepositoryBackup_IPFS
}

func (x *MsgUpdateRepositoryBackupRef) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

type MsgUpdateRepositoryBackupRefResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateRepositoryBackupRefResponse) Reset() {
	*x = MsgUpdateRepositoryBackupRefResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateRepositoryBackupRefResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateRepositoryBackupRefResponse) ProtoMessage() {}

func (x *MsgUpdateRepositoryBackupRefResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateRepositoryBackupRefResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateRepositoryBackupRefResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{10}
}

type MsgAddRepositoryBackupRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string                 `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId          `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Store        RepositoryBackup_Store `protobuf:"varint,3,opt,name=store,proto3,enum=gitopia.gitopia.gitopia.v2.RepositoryBackup_Store" json:"store,omitempty"`
	Ref          string                 `protobuf:"bytes,4,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *MsgAddRepositoryBackupRef) Reset() {
	*x = MsgAddRepositoryBackupRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddRepositoryBackupRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddRepositoryBackupRef) ProtoMessage() {}

func (x *MsgAddRepositoryBackupRef) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddRepositoryBackupRef.ProtoReflect.Descriptor instead.
func (*MsgAddRepositoryBackupRef) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{11}
}

func (x *MsgAddRepositoryBackupRef) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgAddRepositoryBackupRef) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgAddRepositoryBackupRef) GetStore() RepositoryBackup_Store {
	if x != nil {
		return x.Store
	}
	return RepositoryBackup_IPFS
}

func (x *MsgAddRepositoryBackupRef) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

type MsgAddRepositoryBackupRefResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAddRepositoryBackupRefResponse) Reset() {
	*x = MsgAddRepositoryBackupRefResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddRepositoryBackupRefResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddRepositoryBackupRefResponse) ProtoMessage() {}

func (x *MsgAddRepositoryBackupRefResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddRepositoryBackupRefResponse.ProtoReflect.Descriptor instead.
func (*MsgAddRepositoryBackupRefResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{12}
}

type MsgDeleteTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteTaskResponse) Reset() {
	*x = MsgDeleteTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteTaskResponse) ProtoMessage() {}

func (x *MsgDeleteTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteTaskResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteTaskResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{13}
}

type MsgDeleteStorageProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteStorageProviderResponse) Reset() {
	*x = MsgDeleteStorageProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteStorageProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteStorageProviderResponse) ProtoMessage() {}

func (x *MsgDeleteStorageProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteStorageProviderResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteStorageProviderResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{14}
}

type MsgSetBranch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string               `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId        `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Branch       *MsgSetBranch_Branch `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
}

func (x *MsgSetBranch) Reset() {
	*x = MsgSetBranch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetBranch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetBranch) ProtoMessage() {}

func (x *MsgSetBranch) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSetBranch.ProtoReflect.Descriptor instead.
func (*MsgSetBranch) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{15}
}

func (x *MsgSetBranch) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgSetBranch) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgSetBranch) GetBranch() *MsgSetBranch_Branch {
	if x != nil {
		return x.Branch
	}
	return nil
}

type MsgSetBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgSetBranchResponse) Reset() {
	*x = MsgSetBranchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetBranchResponse) ProtoMessage() {}

func (x *MsgSetBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSetBranchResponse.ProtoReflect.Descriptor instead.
func (*MsgSetBranchResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{16}
}

type MsgSetDefaultBranch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Branch       string        `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
}

func (x *MsgSetDefaultBranch) Reset() {
	*x = MsgSetDefaultBranch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetDefaultBranch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetDefaultBranch) ProtoMessage() {}

func (x *MsgSetDefaultBranch) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSetDefaultBranch.ProtoReflect.Descriptor instead.
func (*MsgSetDefaultBranch) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{17}
}

func (x *MsgSetDefaultBranch) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgSetDefaultBranch) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgSetDefaultBranch) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

type MsgSetDefaultBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgSetDefaultBranchResponse) Reset() {
	*x = MsgSetDefaultBranchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetDefaultBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetDefaultBranchResponse) ProtoMessage() {}

func (x *MsgSetDefaultBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSetDefaultBranchResponse.ProtoReflect.Descriptor instead.
func (*MsgSetDefaultBranchResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{18}
}

type MsgMultiSetBranch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string                      `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId               `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Branches     []*MsgMultiSetBranch_Branch `protobuf:"bytes,3,rep,name=branches,proto3" json:"branches,omitempty"`
}

func (x *MsgMultiSetBranch) Reset() {
	*x = MsgMultiSetBranch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMultiSetBranch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMultiSetBranch) ProtoMessage() {}

func (x *MsgMultiSetBranch) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMultiSetBranch.ProtoReflect.Descriptor instead.
func (*MsgMultiSetBranch) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{19}
}

func (x *MsgMultiSetBranch) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgMultiSetBranch) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgMultiSetBranch) GetBranches() []*MsgMultiSetBranch_Branch {
	if x != nil {
		return x.Branches
	}
	return nil
}

type MsgMultiSetBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgMultiSetBranchResponse) Reset() {
	*x = MsgMultiSetBranchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMultiSetBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMultiSetBranchResponse) ProtoMessage() {}

func (x *MsgMultiSetBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMultiSetBranchResponse.ProtoReflect.Descriptor instead.
func (*MsgMultiSetBranchResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{20}
}

type MsgDeleteBranch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Branch       string        `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
}

func (x *MsgDeleteBranch) Reset() {
	*x = MsgDeleteBranch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteBranch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteBranch) ProtoMessage() {}

func (x *MsgDeleteBranch) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteBranch.ProtoReflect.Descriptor instead.
func (*MsgDeleteBranch) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{21}
}

func (x *MsgDeleteBranch) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgDeleteBranch) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgDeleteBranch) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

type MsgDeleteBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteBranchResponse) Reset() {
	*x = MsgDeleteBranchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteBranchResponse) ProtoMessage() {}

func (x *MsgDeleteBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteBranchResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteBranchResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{22}
}

type MsgMultiDeleteBranch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Branches     []string      `protobuf:"bytes,3,rep,name=branches,proto3" json:"branches,omitempty"`
}

func (x *MsgMultiDeleteBranch) Reset() {
	*x = MsgMultiDeleteBranch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMultiDeleteBranch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMultiDeleteBranch) ProtoMessage() {}

func (x *MsgMultiDeleteBranch) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMultiDeleteBranch.ProtoReflect.Descriptor instead.
func (*MsgMultiDeleteBranch) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{23}
}

func (x *MsgMultiDeleteBranch) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgMultiDeleteBranch) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgMultiDeleteBranch) GetBranches() []string {
	if x != nil {
		return x.Branches
	}
	return nil
}

type MsgMultiDeleteBranchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgMultiDeleteBranchResponse) Reset() {
	*x = MsgMultiDeleteBranchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMultiDeleteBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMultiDeleteBranchResponse) ProtoMessage() {}

func (x *MsgMultiDeleteBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMultiDeleteBranchResponse.ProtoReflect.Descriptor instead.
func (*MsgMultiDeleteBranchResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{24}
}

type MsgSetTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string         `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId  `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Tag          *MsgSetTag_Tag `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *MsgSetTag) Reset() {
	*x = MsgSetTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetTag) ProtoMessage() {}

func (x *MsgSetTag) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSetTag.ProtoReflect.Descriptor instead.
func (*MsgSetTag) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{25}
}

func (x *MsgSetTag) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgSetTag) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgSetTag) GetTag() *MsgSetTag_Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type MsgSetTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgSetTagResponse) Reset() {
	*x = MsgSetTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetTagResponse) ProtoMessage() {}

func (x *MsgSetTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSetTagResponse.ProtoReflect.Descriptor instead.
func (*MsgSetTagResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{26}
}

type MsgMultiSetTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string                `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId         `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Tags         []*MsgMultiSetTag_Tag `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *MsgMultiSetTag) Reset() {
	*x = MsgMultiSetTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMultiSetTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMultiSetTag) ProtoMessage() {}

func (x *MsgMultiSetTag) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMultiSetTag.ProtoReflect.Descriptor instead.
func (*MsgMultiSetTag) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{27}
}

func (x *MsgMultiSetTag) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgMultiSetTag) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgMultiSetTag) GetTags() []*MsgMultiSetTag_Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type MsgMultiSetTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgMultiSetTagResponse) Reset() {
	*x = MsgMultiSetTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMultiSetTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMultiSetTagResponse) ProtoMessage() {}

func (x *MsgMultiSetTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMultiSetTagResponse.ProtoReflect.Descriptor instead.
func (*MsgMultiSetTagResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{28}
}

type MsgDeleteTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Tag          string        `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *MsgDeleteTag) Reset() {
	*x = MsgDeleteTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteTag) ProtoMessage() {}

func (x *MsgDeleteTag) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteTag.ProtoReflect.Descriptor instead.
func (*MsgDeleteTag) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{29}
}

func (x *MsgDeleteTag) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgDeleteTag) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgDeleteTag) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type MsgDeleteTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteTagResponse) Reset() {
	*x = MsgDeleteTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteTagResponse) ProtoMessage() {}

func (x *MsgDeleteTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteTagResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteTagResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{30}
}

type MsgMultiDeleteTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Tags         []string      `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *MsgMultiDeleteTag) Reset() {
	*x = MsgMultiDeleteTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMultiDeleteTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMultiDeleteTag) ProtoMessage() {}

func (x *MsgMultiDeleteTag) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMultiDeleteTag.ProtoReflect.Descriptor instead.
func (*MsgMultiDeleteTag) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{31}
}

func (x *MsgMultiDeleteTag) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgMultiDeleteTag) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgMultiDeleteTag) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type MsgMultiDeleteTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgMultiDeleteTagResponse) Reset() {
	*x = MsgMultiDeleteTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMultiDeleteTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMultiDeleteTagResponse) ProtoMessage() {}

func (x *MsgMultiDeleteTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMultiDeleteTagResponse.ProtoReflect.Descriptor instead.
func (*MsgMultiDeleteTagResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{32}
}

type MsgAddMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	DaoId   string     `protobuf:"bytes,2,opt,name=daoId,proto3" json:"daoId,omitempty"`
	UserId  string     `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	Role    MemberRole `protobuf:"varint,4,opt,name=role,proto3,enum=gitopia.gitopia.gitopia.v2.MemberRole" json:"role,omitempty"`
}

func (x *MsgAddMember) Reset() {
	*x = MsgAddMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddMember) ProtoMessage() {}

func (x *MsgAddMember) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddMember.ProtoReflect.Descriptor instead.
func (*MsgAddMember) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{33}
}

func (x *MsgAddMember) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgAddMember) GetDaoId() string {
	if x != nil {
		return x.DaoId
	}
	return ""
}

func (x *MsgAddMember) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MsgAddMember) GetRole() MemberRole {
	if x != nil {
		return x.Role
	}
	return MemberRole_MEMBER
}

type MsgAddMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAddMemberResponse) Reset() {
	*x = MsgAddMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddMemberResponse) ProtoMessage() {}

func (x *MsgAddMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddMemberResponse.ProtoReflect.Descriptor instead.
func (*MsgAddMemberResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{34}
}

type MsgUpdateMemberRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	DaoId   string     `protobuf:"bytes,2,opt,name=daoId,proto3" json:"daoId,omitempty"`
	UserId  string     `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	Role    MemberRole `protobuf:"varint,4,opt,name=role,proto3,enum=gitopia.gitopia.gitopia.v2.MemberRole" json:"role,omitempty"`
}

func (x *MsgUpdateMemberRole) Reset() {
	*x = MsgUpdateMemberRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateMemberRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateMemberRole) ProtoMessage() {}

func (x *MsgUpdateMemberRole) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateMemberRole.ProtoReflect.Descriptor instead.
func (*MsgUpdateMemberRole) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{35}
}

func (x *MsgUpdateMemberRole) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateMemberRole) GetDaoId() string {
	if x != nil {
		return x.DaoId
	}
	return ""
}

func (x *MsgUpdateMemberRole) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MsgUpdateMemberRole) GetRole() MemberRole {
	if x != nil {
		return x.Role
	}
	return MemberRole_MEMBER
}

type MsgUpdateMemberRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateMemberRoleResponse) Reset() {
	*x = MsgUpdateMemberRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateMemberRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateMemberRoleResponse) ProtoMessage() {}

func (x *MsgUpdateMemberRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateMemberRoleResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateMemberRoleResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{36}
}

type MsgRemoveMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	DaoId   string `protobuf:"bytes,2,opt,name=daoId,proto3" json:"daoId,omitempty"`
	UserId  string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *MsgRemoveMember) Reset() {
	*x = MsgRemoveMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemoveMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemoveMember) ProtoMessage() {}

func (x *MsgRemoveMember) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemoveMember.ProtoReflect.Descriptor instead.
func (*MsgRemoveMember) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{37}
}

func (x *MsgRemoveMember) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRemoveMember) GetDaoId() string {
	if x != nil {
		return x.DaoId
	}
	return ""
}

func (x *MsgRemoveMember) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MsgRemoveMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRemoveMemberResponse) Reset() {
	*x = MsgRemoveMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemoveMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemoveMemberResponse) ProtoMessage() {}

func (x *MsgRemoveMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemoveMemberResponse.ProtoReflect.Descriptor instead.
func (*MsgRemoveMemberResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{38}
}

// this line is used by starport scaffolding # proto/tx/message
type MsgCreateRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	TagName      string        `protobuf:"bytes,3,opt,name=tagName,proto3" json:"tagName,omitempty"`
	Target       string        `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	Name         string        `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description  string        `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Attachments  string        `protobuf:"bytes,7,opt,name=attachments,proto3" json:"attachments,omitempty"`
	Draft        bool          `protobuf:"varint,8,opt,name=draft,proto3" json:"draft,omitempty"`
	PreRelease   bool          `protobuf:"varint,9,opt,name=preRelease,proto3" json:"preRelease,omitempty"`
	IsTag        bool          `protobuf:"varint,10,opt,name=isTag,proto3" json:"isTag,omitempty"`
}

func (x *MsgCreateRelease) Reset() {
	*x = MsgCreateRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateRelease) ProtoMessage() {}

func (x *MsgCreateRelease) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateRelease.ProtoReflect.Descriptor instead.
func (*MsgCreateRelease) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{39}
}

func (x *MsgCreateRelease) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreateRelease) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgCreateRelease) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *MsgCreateRelease) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *MsgCreateRelease) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgCreateRelease) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgCreateRelease) GetAttachments() string {
	if x != nil {
		return x.Attachments
	}
	return ""
}

func (x *MsgCreateRelease) GetDraft() bool {
	if x != nil {
		return x.Draft
	}
	return false
}

func (x *MsgCreateRelease) GetPreRelease() bool {
	if x != nil {
		return x.PreRelease
	}
	return false
}

func (x *MsgCreateRelease) GetIsTag() bool {
	if x != nil {
		return x.IsTag
	}
	return false
}

type MsgCreateReleaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgCreateReleaseResponse) Reset() {
	*x = MsgCreateReleaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateReleaseResponse) ProtoMessage() {}

func (x *MsgCreateReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateReleaseResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateReleaseResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{40}
}

func (x *MsgCreateReleaseResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MsgUpdateRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	TagName     string `protobuf:"bytes,3,opt,name=tagName,proto3" json:"tagName,omitempty"`
	Target      string `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Attachments string `protobuf:"bytes,7,opt,name=attachments,proto3" json:"attachments,omitempty"`
	Draft       bool   `protobuf:"varint,8,opt,name=draft,proto3" json:"draft,omitempty"`
	PreRelease  bool   `protobuf:"varint,9,opt,name=preRelease,proto3" json:"preRelease,omitempty"`
	IsTag       bool   `protobuf:"varint,10,opt,name=isTag,proto3" json:"isTag,omitempty"`
}

func (x *MsgUpdateRelease) Reset() {
	*x = MsgUpdateRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateRelease) ProtoMessage() {}

func (x *MsgUpdateRelease) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateRelease.ProtoReflect.Descriptor instead.
func (*MsgUpdateRelease) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{41}
}

func (x *MsgUpdateRelease) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateRelease) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgUpdateRelease) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *MsgUpdateRelease) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *MsgUpdateRelease) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgUpdateRelease) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgUpdateRelease) GetAttachments() string {
	if x != nil {
		return x.Attachments
	}
	return ""
}

func (x *MsgUpdateRelease) GetDraft() bool {
	if x != nil {
		return x.Draft
	}
	return false
}

func (x *MsgUpdateRelease) GetPreRelease() bool {
	if x != nil {
		return x.PreRelease
	}
	return false
}

func (x *MsgUpdateRelease) GetIsTag() bool {
	if x != nil {
		return x.IsTag
	}
	return false
}

type MsgUpdateReleaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateReleaseResponse) Reset() {
	*x = MsgUpdateReleaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateReleaseResponse) ProtoMessage() {}

func (x *MsgUpdateReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateReleaseResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateReleaseResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{42}
}

type MsgDeleteRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgDeleteRelease) Reset() {
	*x = MsgDeleteRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteRelease) ProtoMessage() {}

func (x *MsgDeleteRelease) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteRelease.ProtoReflect.Descriptor instead.
func (*MsgDeleteRelease) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{43}
}

func (x *MsgDeleteRelease) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgDeleteRelease) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MsgDeleteReleaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteReleaseResponse) Reset() {
	*x = MsgDeleteReleaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteReleaseResponse) ProtoMessage() {}

func (x *MsgDeleteReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteReleaseResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteReleaseResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{44}
}

type MsgCreatePullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator          string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Title            string        `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description      string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	HeadBranch       string        `protobuf:"bytes,4,opt,name=headBranch,proto3" json:"headBranch,omitempty"`
	HeadRepositoryId *RepositoryId `protobuf:"bytes,5,opt,name=headRepositoryId,proto3" json:"headRepositoryId,omitempty"`
	BaseBranch       string        `protobuf:"bytes,6,opt,name=baseBranch,proto3" json:"baseBranch,omitempty"`
	BaseRepositoryId *RepositoryId `protobuf:"bytes,7,opt,name=baseRepositoryId,proto3" json:"baseRepositoryId,omitempty"`
	Reviewers        []string      `protobuf:"bytes,8,rep,name=reviewers,proto3" json:"reviewers,omitempty"`
	Assignees        []string      `protobuf:"bytes,9,rep,name=assignees,proto3" json:"assignees,omitempty"`
	LabelIds         []uint64      `protobuf:"varint,10,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
}

func (x *MsgCreatePullRequest) Reset() {
	*x = MsgCreatePullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreatePullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreatePullRequest) ProtoMessage() {}

func (x *MsgCreatePullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreatePullRequest.ProtoReflect.Descriptor instead.
func (*MsgCreatePullRequest) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{45}
}

func (x *MsgCreatePullRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreatePullRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgCreatePullRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgCreatePullRequest) GetHeadBranch() string {
	if x != nil {
		return x.HeadBranch
	}
	return ""
}

func (x *MsgCreatePullRequest) GetHeadRepositoryId() *RepositoryId {
	if x != nil {
		return x.HeadRepositoryId
	}
	return nil
}

func (x *MsgCreatePullRequest) GetBaseBranch() string {
	if x != nil {
		return x.BaseBranch
	}
	return ""
}

func (x *MsgCreatePullRequest) GetBaseRepositoryId() *RepositoryId {
	if x != nil {
		return x.BaseRepositoryId
	}
	return nil
}

func (x *MsgCreatePullRequest) GetReviewers() []string {
	if x != nil {
		return x.Reviewers
	}
	return nil
}

func (x *MsgCreatePullRequest) GetAssignees() []string {
	if x != nil {
		return x.Assignees
	}
	return nil
}

func (x *MsgCreatePullRequest) GetLabelIds() []uint64 {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

type MsgCreatePullRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Iid uint64 `protobuf:"varint,2,opt,name=iid,proto3" json:"iid,omitempty"`
}

func (x *MsgCreatePullRequestResponse) Reset() {
	*x = MsgCreatePullRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreatePullRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreatePullRequestResponse) ProtoMessage() {}

func (x *MsgCreatePullRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreatePullRequestResponse.ProtoReflect.Descriptor instead.
func (*MsgCreatePullRequestResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{46}
}

func (x *MsgCreatePullRequestResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgCreatePullRequestResponse) GetIid() uint64 {
	if x != nil {
		return x.Iid
	}
	return 0
}

type MsgUpdatePullRequestTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Title   string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *MsgUpdatePullRequestTitle) Reset() {
	*x = MsgUpdatePullRequestTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdatePullRequestTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdatePullRequestTitle) ProtoMessage() {}

func (x *MsgUpdatePullRequestTitle) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdatePullRequestTitle.ProtoReflect.Descriptor instead.
func (*MsgUpdatePullRequestTitle) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{47}
}

func (x *MsgUpdatePullRequestTitle) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdatePullRequestTitle) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgUpdatePullRequestTitle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type MsgUpdatePullRequestTitleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdatePullRequestTitleResponse) Reset() {
	*x = MsgUpdatePullRequestTitleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdatePullRequestTitleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdatePullRequestTitleResponse) ProtoMessage() {}

func (x *MsgUpdatePullRequestTitleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdatePullRequestTitleResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdatePullRequestTitleResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{48}
}

type MsgUpdatePullRequestDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *MsgUpdatePullRequestDescription) Reset() {
	*x = MsgUpdatePullRequestDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdatePullRequestDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdatePullRequestDescription) ProtoMessage() {}

func (x *MsgUpdatePullRequestDescription) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdatePullRequestDescription.ProtoReflect.Descriptor instead.
func (*MsgUpdatePullRequestDescription) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{49}
}

func (x *MsgUpdatePullRequestDescription) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdatePullRequestDescription) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgUpdatePullRequestDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type MsgUpdatePullRequestDescriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdatePullRequestDescriptionResponse) Reset() {
	*x = MsgUpdatePullRequestDescriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdatePullRequestDescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdatePullRequestDescriptionResponse) ProtoMessage() {}

func (x *MsgUpdatePullRequestDescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdatePullRequestDescriptionResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdatePullRequestDescriptionResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{50}
}

type MsgInvokeMergePullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id       uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Provider string `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *MsgInvokeMergePullRequest) Reset() {
	*x = MsgInvokeMergePullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgInvokeMergePullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgInvokeMergePullRequest) ProtoMessage() {}

func (x *MsgInvokeMergePullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgInvokeMergePullRequest.ProtoReflect.Descriptor instead.
func (*MsgInvokeMergePullRequest) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{51}
}

func (x *MsgInvokeMergePullRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgInvokeMergePullRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgInvokeMergePullRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type MsgInvokeMergePullRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgInvokeMergePullRequestResponse) Reset() {
	*x = MsgInvokeMergePullRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgInvokeMergePullRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgInvokeMergePullRequestResponse) ProtoMessage() {}

func (x *MsgInvokeMergePullRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgInvokeMergePullRequestResponse.ProtoReflect.Descriptor instead.
func (*MsgInvokeMergePullRequestResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{52}
}

type MsgSetPullRequestState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id             uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	State          string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	MergeCommitSha string `protobuf:"bytes,4,opt,name=mergeCommitSha,proto3" json:"mergeCommitSha,omitempty"`
	TaskId         uint64 `protobuf:"varint,5,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *MsgSetPullRequestState) Reset() {
	*x = MsgSetPullRequestState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetPullRequestState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetPullRequestState) ProtoMessage() {}

func (x *MsgSetPullRequestState) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSetPullRequestState.ProtoReflect.Descriptor instead.
func (*MsgSetPullRequestState) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{53}
}

func (x *MsgSetPullRequestState) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgSetPullRequestState) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgSetPullRequestState) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *MsgSetPullRequestState) GetMergeCommitSha() string {
	if x != nil {
		return x.MergeCommitSha
	}
	return ""
}

func (x *MsgSetPullRequestState) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type MsgSetPullRequestStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *MsgSetPullRequestStateResponse) Reset() {
	*x = MsgSetPullRequestStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetPullRequestStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetPullRequestStateResponse) ProtoMessage() {}

func (x *MsgSetPullRequestStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSetPullRequestStateResponse.ProtoReflect.Descriptor instead.
func (*MsgSetPullRequestStateResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{54}
}

func (x *MsgSetPullRequestStateResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type MsgAddPullRequestReviewers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator   string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id        uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Reviewers []string `protobuf:"bytes,3,rep,name=reviewers,proto3" json:"reviewers,omitempty"`
}

func (x *MsgAddPullRequestReviewers) Reset() {
	*x = MsgAddPullRequestReviewers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddPullRequestReviewers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddPullRequestReviewers) ProtoMessage() {}

func (x *MsgAddPullRequestReviewers) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddPullRequestReviewers.ProtoReflect.Descriptor instead.
func (*MsgAddPullRequestReviewers) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{55}
}

func (x *MsgAddPullRequestReviewers) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgAddPullRequestReviewers) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgAddPullRequestReviewers) GetReviewers() []string {
	if x != nil {
		return x.Reviewers
	}
	return nil
}

type MsgAddPullRequestReviewersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAddPullRequestReviewersResponse) Reset() {
	*x = MsgAddPullRequestReviewersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddPullRequestReviewersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddPullRequestReviewersResponse) ProtoMessage() {}

func (x *MsgAddPullRequestReviewersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddPullRequestReviewersResponse.ProtoReflect.Descriptor instead.
func (*MsgAddPullRequestReviewersResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{56}
}

type MsgRemovePullRequestReviewers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator   string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id        uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Reviewers []string `protobuf:"bytes,3,rep,name=reviewers,proto3" json:"reviewers,omitempty"`
}

func (x *MsgRemovePullRequestReviewers) Reset() {
	*x = MsgRemovePullRequestReviewers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemovePullRequestReviewers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemovePullRequestReviewers) ProtoMessage() {}

func (x *MsgRemovePullRequestReviewers) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemovePullRequestReviewers.ProtoReflect.Descriptor instead.
func (*MsgRemovePullRequestReviewers) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{57}
}

func (x *MsgRemovePullRequestReviewers) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRemovePullRequestReviewers) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgRemovePullRequestReviewers) GetReviewers() []string {
	if x != nil {
		return x.Reviewers
	}
	return nil
}

type MsgRemovePullRequestReviewersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRemovePullRequestReviewersResponse) Reset() {
	*x = MsgRemovePullRequestReviewersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemovePullRequestReviewersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemovePullRequestReviewersResponse) ProtoMessage() {}

func (x *MsgRemovePullRequestReviewersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemovePullRequestReviewersResponse.ProtoReflect.Descriptor instead.
func (*MsgRemovePullRequestReviewersResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{58}
}

type MsgAddPullRequestAssignees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator   string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id        uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Assignees []string `protobuf:"bytes,3,rep,name=assignees,proto3" json:"assignees,omitempty"`
}

func (x *MsgAddPullRequestAssignees) Reset() {
	*x = MsgAddPullRequestAssignees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddPullRequestAssignees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddPullRequestAssignees) ProtoMessage() {}

func (x *MsgAddPullRequestAssignees) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddPullRequestAssignees.ProtoReflect.Descriptor instead.
func (*MsgAddPullRequestAssignees) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{59}
}

func (x *MsgAddPullRequestAssignees) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgAddPullRequestAssignees) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgAddPullRequestAssignees) GetAssignees() []string {
	if x != nil {
		return x.Assignees
	}
	return nil
}

type MsgAddPullRequestAssigneesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAddPullRequestAssigneesResponse) Reset() {
	*x = MsgAddPullRequestAssigneesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddPullRequestAssigneesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddPullRequestAssigneesResponse) ProtoMessage() {}

func (x *MsgAddPullRequestAssigneesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddPullRequestAssigneesResponse.ProtoReflect.Descriptor instead.
func (*MsgAddPullRequestAssigneesResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{60}
}

type MsgRemovePullRequestAssignees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator   string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id        uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Assignees []string `protobuf:"bytes,3,rep,name=assignees,proto3" json:"assignees,omitempty"`
}

func (x *MsgRemovePullRequestAssignees) Reset() {
	*x = MsgRemovePullRequestAssignees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemovePullRequestAssignees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemovePullRequestAssignees) ProtoMessage() {}

func (x *MsgRemovePullRequestAssignees) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemovePullRequestAssignees.ProtoReflect.Descriptor instead.
func (*MsgRemovePullRequestAssignees) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{61}
}

func (x *MsgRemovePullRequestAssignees) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRemovePullRequestAssignees) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgRemovePullRequestAssignees) GetAssignees() []string {
	if x != nil {
		return x.Assignees
	}
	return nil
}

type MsgRemovePullRequestAssigneesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRemovePullRequestAssigneesResponse) Reset() {
	*x = MsgRemovePullRequestAssigneesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemovePullRequestAssigneesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemovePullRequestAssigneesResponse) ProtoMessage() {}

func (x *MsgRemovePullRequestAssigneesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemovePullRequestAssigneesResponse.ProtoReflect.Descriptor instead.
func (*MsgRemovePullRequestAssigneesResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{62}
}

type MsgAddPullRequestLabels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator       string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PullRequestId uint64   `protobuf:"varint,2,opt,name=pullRequestId,proto3" json:"pullRequestId,omitempty"`
	LabelIds      []uint64 `protobuf:"varint,3,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
}

func (x *MsgAddPullRequestLabels) Reset() {
	*x = MsgAddPullRequestLabels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddPullRequestLabels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddPullRequestLabels) ProtoMessage() {}

func (x *MsgAddPullRequestLabels) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddPullRequestLabels.ProtoReflect.Descriptor instead.
func (*MsgAddPullRequestLabels) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{63}
}

func (x *MsgAddPullRequestLabels) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgAddPullRequestLabels) GetPullRequestId() uint64 {
	if x != nil {
		return x.PullRequestId
	}
	return 0
}

func (x *MsgAddPullRequestLabels) GetLabelIds() []uint64 {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

type MsgAddPullRequestLabelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAddPullRequestLabelsResponse) Reset() {
	*x = MsgAddPullRequestLabelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddPullRequestLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddPullRequestLabelsResponse) ProtoMessage() {}

func (x *MsgAddPullRequestLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddPullRequestLabelsResponse.ProtoReflect.Descriptor instead.
func (*MsgAddPullRequestLabelsResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{64}
}

type MsgRemovePullRequestLabels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator       string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	PullRequestId uint64   `protobuf:"varint,2,opt,name=pullRequestId,proto3" json:"pullRequestId,omitempty"`
	LabelIds      []uint64 `protobuf:"varint,3,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
}

func (x *MsgRemovePullRequestLabels) Reset() {
	*x = MsgRemovePullRequestLabels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemovePullRequestLabels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemovePullRequestLabels) ProtoMessage() {}

func (x *MsgRemovePullRequestLabels) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemovePullRequestLabels.ProtoReflect.Descriptor instead.
func (*MsgRemovePullRequestLabels) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{65}
}

func (x *MsgRemovePullRequestLabels) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRemovePullRequestLabels) GetPullRequestId() uint64 {
	if x != nil {
		return x.PullRequestId
	}
	return 0
}

func (x *MsgRemovePullRequestLabels) GetLabelIds() []uint64 {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

type MsgRemovePullRequestLabelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRemovePullRequestLabelsResponse) Reset() {
	*x = MsgRemovePullRequestLabelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemovePullRequestLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemovePullRequestLabelsResponse) ProtoMessage() {}

func (x *MsgRemovePullRequestLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemovePullRequestLabelsResponse.ProtoReflect.Descriptor instead.
func (*MsgRemovePullRequestLabelsResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{66}
}

type MsgDeletePullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgDeletePullRequest) Reset() {
	*x = MsgDeletePullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeletePullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeletePullRequest) ProtoMessage() {}

func (x *MsgDeletePullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeletePullRequest.ProtoReflect.Descriptor instead.
func (*MsgDeletePullRequest) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{67}
}

func (x *MsgDeletePullRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgDeletePullRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MsgDeletePullRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeletePullRequestResponse) Reset() {
	*x = MsgDeletePullRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeletePullRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeletePullRequestResponse) ProtoMessage() {}

func (x *MsgDeletePullRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeletePullRequestResponse.ProtoReflect.Descriptor instead.
func (*MsgDeletePullRequestResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{68}
}

type MsgCreateDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	AvatarUrl   string `protobuf:"bytes,4,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	Location    string `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	Website     string `protobuf:"bytes,6,opt,name=website,proto3" json:"website,omitempty"`
}

func (x *MsgCreateDao) Reset() {
	*x = MsgCreateDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateDao) ProtoMessage() {}

func (x *MsgCreateDao) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateDao.ProtoReflect.Descriptor instead.
func (*MsgCreateDao) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{69}
}

func (x *MsgCreateDao) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreateDao) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgCreateDao) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgCreateDao) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *MsgCreateDao) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *MsgCreateDao) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

type MsgCreateDaoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgCreateDaoResponse) Reset() {
	*x = MsgCreateDaoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateDaoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateDaoResponse) ProtoMessage() {}

func (x *MsgCreateDaoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateDaoResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateDaoResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{70}
}

func (x *MsgCreateDaoResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MsgRenameDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MsgRenameDao) Reset() {
	*x = MsgRenameDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRenameDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRenameDao) ProtoMessage() {}

func (x *MsgRenameDao) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRenameDao.ProtoReflect.Descriptor instead.
func (*MsgRenameDao) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{71}
}

func (x *MsgRenameDao) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRenameDao) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MsgRenameDao) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MsgRenameDaoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRenameDaoResponse) Reset() {
	*x = MsgRenameDaoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRenameDaoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRenameDaoResponse) ProtoMessage() {}

func (x *MsgRenameDaoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRenameDaoResponse.ProtoReflect.Descriptor instead.
func (*MsgRenameDaoResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{72}
}

type MsgUpdateDaoDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id          string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *MsgUpdateDaoDescription) Reset() {
	*x = MsgUpdateDaoDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateDaoDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateDaoDescription) ProtoMessage() {}

func (x *MsgUpdateDaoDescription) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateDaoDescription.ProtoReflect.Descriptor instead.
func (*MsgUpdateDaoDescription) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{73}
}

func (x *MsgUpdateDaoDescription) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateDaoDescription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MsgUpdateDaoDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type MsgUpdateDaoDescriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateDaoDescriptionResponse) Reset() {
	*x = MsgUpdateDaoDescriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateDaoDescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateDaoDescriptionResponse) ProtoMessage() {}

func (x *MsgUpdateDaoDescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateDaoDescriptionResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateDaoDescriptionResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{74}
}

type MsgUpdateDaoWebsite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Url     string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *MsgUpdateDaoWebsite) Reset() {
	*x = MsgUpdateDaoWebsite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateDaoWebsite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateDaoWebsite) ProtoMessage() {}

func (x *MsgUpdateDaoWebsite) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateDaoWebsite.ProtoReflect.Descriptor instead.
func (*MsgUpdateDaoWebsite) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{75}
}

func (x *MsgUpdateDaoWebsite) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateDaoWebsite) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MsgUpdateDaoWebsite) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type MsgUpdateDaoWebsiteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateDaoWebsiteResponse) Reset() {
	*x = MsgUpdateDaoWebsiteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateDaoWebsiteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateDaoWebsiteResponse) ProtoMessage() {}

func (x *MsgUpdateDaoWebsiteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateDaoWebsiteResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateDaoWebsiteResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{76}
}

type MsgUpdateDaoLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Location string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *MsgUpdateDaoLocation) Reset() {
	*x = MsgUpdateDaoLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateDaoLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateDaoLocation) ProtoMessage() {}

func (x *MsgUpdateDaoLocation) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateDaoLocation.ProtoReflect.Descriptor instead.
func (*MsgUpdateDaoLocation) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{77}
}

func (x *MsgUpdateDaoLocation) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateDaoLocation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MsgUpdateDaoLocation) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type MsgUpdateDaoLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateDaoLocationResponse) Reset() {
	*x = MsgUpdateDaoLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateDaoLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateDaoLocationResponse) ProtoMessage() {}

func (x *MsgUpdateDaoLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateDaoLocationResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateDaoLocationResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{78}
}

type MsgUpdateDaoAvatar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Url     string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *MsgUpdateDaoAvatar) Reset() {
	*x = MsgUpdateDaoAvatar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateDaoAvatar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateDaoAvatar) ProtoMessage() {}

func (x *MsgUpdateDaoAvatar) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateDaoAvatar.ProtoReflect.Descriptor instead.
func (*MsgUpdateDaoAvatar) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{79}
}

func (x *MsgUpdateDaoAvatar) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateDaoAvatar) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MsgUpdateDaoAvatar) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type MsgUpdateDaoAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateDaoAvatarResponse) Reset() {
	*x = MsgUpdateDaoAvatarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateDaoAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateDaoAvatarResponse) ProtoMessage() {}

func (x *MsgUpdateDaoAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateDaoAvatarResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateDaoAvatarResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{80}
}

type MsgDeleteDao struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgDeleteDao) Reset() {
	*x = MsgDeleteDao{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteDao) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteDao) ProtoMessage() {}

func (x *MsgDeleteDao) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteDao.ProtoReflect.Descriptor instead.
func (*MsgDeleteDao) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{81}
}

func (x *MsgDeleteDao) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgDeleteDao) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MsgDeleteDaoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteDaoResponse) Reset() {
	*x = MsgDeleteDaoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteDaoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteDaoResponse) ProtoMessage() {}

func (x *MsgDeleteDaoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteDaoResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteDaoResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{82}
}

type MsgCreateComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator           string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ParentId          uint64   `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Body              string   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	Attachments       []string `protobuf:"bytes,4,rep,name=attachments,proto3" json:"attachments,omitempty"`
	DiffHunk          string   `protobuf:"bytes,5,opt,name=diffHunk,proto3" json:"diffHunk,omitempty"`
	Path              string   `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	System            bool     `protobuf:"varint,7,opt,name=system,proto3" json:"system,omitempty"`
	AuthorAssociation string   `protobuf:"bytes,8,opt,name=authorAssociation,proto3" json:"authorAssociation,omitempty"`
	CommentType       string   `protobuf:"bytes,9,opt,name=commentType,proto3" json:"commentType,omitempty"`
}

func (x *MsgCreateComment) Reset() {
	*x = MsgCreateComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateComment) ProtoMessage() {}

func (x *MsgCreateComment) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateComment.ProtoReflect.Descriptor instead.
func (*MsgCreateComment) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{83}
}

func (x *MsgCreateComment) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreateComment) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *MsgCreateComment) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *MsgCreateComment) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *MsgCreateComment) GetDiffHunk() string {
	if x != nil {
		return x.DiffHunk
	}
	return ""
}

func (x *MsgCreateComment) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MsgCreateComment) GetSystem() bool {
	if x != nil {
		return x.System
	}
	return false
}

func (x *MsgCreateComment) GetAuthorAssociation() string {
	if x != nil {
		return x.AuthorAssociation
	}
	return ""
}

func (x *MsgCreateComment) GetCommentType() string {
	if x != nil {
		return x.CommentType
	}
	return ""
}

type MsgCreateCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgCreateCommentResponse) Reset() {
	*x = MsgCreateCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateCommentResponse) ProtoMessage() {}

func (x *MsgCreateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateCommentResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateCommentResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{84}
}

func (x *MsgCreateCommentResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MsgUpdateComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator     string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id          uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Body        string   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	Attachments []string `protobuf:"bytes,4,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *MsgUpdateComment) Reset() {
	*x = MsgUpdateComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateComment) ProtoMessage() {}

func (x *MsgUpdateComment) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateComment.ProtoReflect.Descriptor instead.
func (*MsgUpdateComment) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{85}
}

func (x *MsgUpdateComment) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateComment) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgUpdateComment) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *MsgUpdateComment) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type MsgUpdateCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateCommentResponse) Reset() {
	*x = MsgUpdateCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateCommentResponse) ProtoMessage() {}

func (x *MsgUpdateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateCommentResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateCommentResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{86}
}

type MsgDeleteComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgDeleteComment) Reset() {
	*x = MsgDeleteComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteComment) ProtoMessage() {}

func (x *MsgDeleteComment) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteComment.ProtoReflect.Descriptor instead.
func (*MsgDeleteComment) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{87}
}

func (x *MsgDeleteComment) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgDeleteComment) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MsgDeleteCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteCommentResponse) Reset() {
	*x = MsgDeleteCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteCommentResponse) ProtoMessage() {}

func (x *MsgDeleteCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteCommentResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteCommentResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{88}
}

type MsgCreateIssue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Title        string        `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description  string        `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	LabelIds     []uint64      `protobuf:"varint,5,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
	Weight       uint64        `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
	Assignees    []string      `protobuf:"bytes,7,rep,name=assignees,proto3" json:"assignees,omitempty"`
}

func (x *MsgCreateIssue) Reset() {
	*x = MsgCreateIssue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateIssue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateIssue) ProtoMessage() {}

func (x *MsgCreateIssue) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateIssue.ProtoReflect.Descriptor instead.
func (*MsgCreateIssue) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{89}
}

func (x *MsgCreateIssue) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreateIssue) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgCreateIssue) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgCreateIssue) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgCreateIssue) GetLabelIds() []uint64 {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

func (x *MsgCreateIssue) GetWeight() uint64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *MsgCreateIssue) GetAssignees() []string {
	if x != nil {
		return x.Assignees
	}
	return nil
}

type MsgCreateIssueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Iid uint64 `protobuf:"varint,2,opt,name=iid,proto3" json:"iid,omitempty"`
}

func (x *MsgCreateIssueResponse) Reset() {
	*x = MsgCreateIssueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateIssueResponse) ProtoMessage() {}

func (x *MsgCreateIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateIssueResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateIssueResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{90}
}

func (x *MsgCreateIssueResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgCreateIssueResponse) GetIid() uint64 {
	if x != nil {
		return x.Iid
	}
	return 0
}

type MsgUpdateIssueTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Title   string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *MsgUpdateIssueTitle) Reset() {
	*x = MsgUpdateIssueTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateIssueTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateIssueTitle) ProtoMessage() {}

func (x *MsgUpdateIssueTitle) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateIssueTitle.ProtoReflect.Descriptor instead.
func (*MsgUpdateIssueTitle) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{91}
}

func (x *MsgUpdateIssueTitle) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateIssueTitle) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgUpdateIssueTitle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type MsgUpdateIssueTitleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateIssueTitleResponse) Reset() {
	*x = MsgUpdateIssueTitleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateIssueTitleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateIssueTitleResponse) ProtoMessage() {}

func (x *MsgUpdateIssueTitleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateIssueTitleResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateIssueTitleResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{92}
}

type MsgUpdateIssueDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *MsgUpdateIssueDescription) Reset() {
	*x = MsgUpdateIssueDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateIssueDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateIssueDescription) ProtoMessage() {}

func (x *MsgUpdateIssueDescription) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateIssueDescription.ProtoReflect.Descriptor instead.
func (*MsgUpdateIssueDescription) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{93}
}

func (x *MsgUpdateIssueDescription) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateIssueDescription) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgUpdateIssueDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type MsgUpdateIssueDescriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateIssueDescriptionResponse) Reset() {
	*x = MsgUpdateIssueDescriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateIssueDescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateIssueDescriptionResponse) ProtoMessage() {}

func (x *MsgUpdateIssueDescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateIssueDescriptionResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateIssueDescriptionResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{94}
}

type MsgToggleIssueState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgToggleIssueState) Reset() {
	*x = MsgToggleIssueState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgToggleIssueState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToggleIssueState) ProtoMessage() {}

func (x *MsgToggleIssueState) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgToggleIssueState.ProtoReflect.Descriptor instead.
func (*MsgToggleIssueState) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{95}
}

func (x *MsgToggleIssueState) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgToggleIssueState) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MsgToggleIssueStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *MsgToggleIssueStateResponse) Reset() {
	*x = MsgToggleIssueStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgToggleIssueStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToggleIssueStateResponse) ProtoMessage() {}

func (x *MsgToggleIssueStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgToggleIssueStateResponse.ProtoReflect.Descriptor instead.
func (*MsgToggleIssueStateResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{96}
}

func (x *MsgToggleIssueStateResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type MsgAddIssueAssignees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator   string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id        uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Assignees []string `protobuf:"bytes,3,rep,name=assignees,proto3" json:"assignees,omitempty"`
}

func (x *MsgAddIssueAssignees) Reset() {
	*x = MsgAddIssueAssignees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddIssueAssignees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddIssueAssignees) ProtoMessage() {}

func (x *MsgAddIssueAssignees) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddIssueAssignees.ProtoReflect.Descriptor instead.
func (*MsgAddIssueAssignees) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{97}
}

func (x *MsgAddIssueAssignees) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgAddIssueAssignees) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgAddIssueAssignees) GetAssignees() []string {
	if x != nil {
		return x.Assignees
	}
	return nil
}

type MsgAddIssueAssigneesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAddIssueAssigneesResponse) Reset() {
	*x = MsgAddIssueAssigneesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddIssueAssigneesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddIssueAssigneesResponse) ProtoMessage() {}

func (x *MsgAddIssueAssigneesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddIssueAssigneesResponse.ProtoReflect.Descriptor instead.
func (*MsgAddIssueAssigneesResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{98}
}

type MsgRemoveIssueAssignees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator   string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id        uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Assignees []string `protobuf:"bytes,3,rep,name=assignees,proto3" json:"assignees,omitempty"`
}

func (x *MsgRemoveIssueAssignees) Reset() {
	*x = MsgRemoveIssueAssignees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemoveIssueAssignees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemoveIssueAssignees) ProtoMessage() {}

func (x *MsgRemoveIssueAssignees) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemoveIssueAssignees.ProtoReflect.Descriptor instead.
func (*MsgRemoveIssueAssignees) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{99}
}

func (x *MsgRemoveIssueAssignees) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRemoveIssueAssignees) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MsgRemoveIssueAssignees) GetAssignees() []string {
	if x != nil {
		return x.Assignees
	}
	return nil
}

type MsgRemoveIssueAssigneesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRemoveIssueAssigneesResponse) Reset() {
	*x = MsgRemoveIssueAssigneesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemoveIssueAssigneesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemoveIssueAssigneesResponse) ProtoMessage() {}

func (x *MsgRemoveIssueAssigneesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemoveIssueAssigneesResponse.ProtoReflect.Descriptor instead.
func (*MsgRemoveIssueAssigneesResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{100}
}

type MsgAddIssueLabels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator  string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	IssueId  uint64   `protobuf:"varint,2,opt,name=issueId,proto3" json:"issueId,omitempty"`
	LabelIds []uint64 `protobuf:"varint,3,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
}

func (x *MsgAddIssueLabels) Reset() {
	*x = MsgAddIssueLabels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddIssueLabels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddIssueLabels) ProtoMessage() {}

func (x *MsgAddIssueLabels) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddIssueLabels.ProtoReflect.Descriptor instead.
func (*MsgAddIssueLabels) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{101}
}

func (x *MsgAddIssueLabels) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgAddIssueLabels) GetIssueId() uint64 {
	if x != nil {
		return x.IssueId
	}
	return 0
}

func (x *MsgAddIssueLabels) GetLabelIds() []uint64 {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

type MsgAddIssueLabelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAddIssueLabelsResponse) Reset() {
	*x = MsgAddIssueLabelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAddIssueLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAddIssueLabelsResponse) ProtoMessage() {}

func (x *MsgAddIssueLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAddIssueLabelsResponse.ProtoReflect.Descriptor instead.
func (*MsgAddIssueLabelsResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{102}
}

type MsgRemoveIssueLabels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator  string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	IssueId  uint64   `protobuf:"varint,2,opt,name=issueId,proto3" json:"issueId,omitempty"`
	LabelIds []uint64 `protobuf:"varint,3,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
}

func (x *MsgRemoveIssueLabels) Reset() {
	*x = MsgRemoveIssueLabels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemoveIssueLabels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemoveIssueLabels) ProtoMessage() {}

func (x *MsgRemoveIssueLabels) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemoveIssueLabels.ProtoReflect.Descriptor instead.
func (*MsgRemoveIssueLabels) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{103}
}

func (x *MsgRemoveIssueLabels) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRemoveIssueLabels) GetIssueId() uint64 {
	if x != nil {
		return x.IssueId
	}
	return 0
}

func (x *MsgRemoveIssueLabels) GetLabelIds() []uint64 {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

type MsgRemoveIssueLabelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRemoveIssueLabelsResponse) Reset() {
	*x = MsgRemoveIssueLabelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemoveIssueLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemoveIssueLabelsResponse) ProtoMessage() {}

func (x *MsgRemoveIssueLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemoveIssueLabelsResponse.ProtoReflect.Descriptor instead.
func (*MsgRemoveIssueLabelsResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{104}
}

type MsgDeleteIssue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgDeleteIssue) Reset() {
	*x = MsgDeleteIssue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteIssue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteIssue) ProtoMessage() {}

func (x *MsgDeleteIssue) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteIssue.ProtoReflect.Descriptor instead.
func (*MsgDeleteIssue) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{105}
}

func (x *MsgDeleteIssue) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgDeleteIssue) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MsgDeleteIssueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteIssueResponse) Reset() {
	*x = MsgDeleteIssueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteIssueResponse) ProtoMessage() {}

func (x *MsgDeleteIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteIssueResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteIssueResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{106}
}

type MsgCreateRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner       string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *MsgCreateRepository) Reset() {
	*x = MsgCreateRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateRepository) ProtoMessage() {}

func (x *MsgCreateRepository) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateRepository.ProtoReflect.Descriptor instead.
func (*MsgCreateRepository) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{107}
}

func (x *MsgCreateRepository) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreateRepository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgCreateRepository) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *MsgCreateRepository) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type MsgCreateRepositoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
}

func (x *MsgCreateRepositoryResponse) Reset() {
	*x = MsgCreateRepositoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateRepositoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateRepositoryResponse) ProtoMessage() {}

func (x *MsgCreateRepositoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateRepositoryResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateRepositoryResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{108}
}

func (x *MsgCreateRepositoryResponse) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

type MsgInvokeForkRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Owner        string        `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Provider     string        `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *MsgInvokeForkRepository) Reset() {
	*x = MsgInvokeForkRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgInvokeForkRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgInvokeForkRepository) ProtoMessage() {}

func (x *MsgInvokeForkRepository) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgInvokeForkRepository.ProtoReflect.Descriptor instead.
func (*MsgInvokeForkRepository) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{109}
}

func (x *MsgInvokeForkRepository) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgInvokeForkRepository) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgInvokeForkRepository) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *MsgInvokeForkRepository) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type MsgInvokeForkRepositoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgInvokeForkRepositoryResponse) Reset() {
	*x = MsgInvokeForkRepositoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgInvokeForkRepositoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgInvokeForkRepositoryResponse) ProtoMessage() {}

func (x *MsgInvokeForkRepositoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgInvokeForkRepositoryResponse.ProtoReflect.Descriptor instead.
func (*MsgInvokeForkRepositoryResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{110}
}

type MsgForkRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Owner        string        `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	TaskId       uint64        `protobuf:"varint,4,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *MsgForkRepository) Reset() {
	*x = MsgForkRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgForkRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgForkRepository) ProtoMessage() {}

func (x *MsgForkRepository) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgForkRepository.ProtoReflect.Descriptor instead.
func (*MsgForkRepository) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{111}
}

func (x *MsgForkRepository) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgForkRepository) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgForkRepository) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *MsgForkRepository) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type MsgForkRepositoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgForkRepositoryResponse) Reset() {
	*x = MsgForkRepositoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgForkRepositoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgForkRepositoryResponse) ProtoMessage() {}

func (x *MsgForkRepositoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgForkRepositoryResponse.ProtoReflect.Descriptor instead.
func (*MsgForkRepositoryResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{112}
}

func (x *MsgForkRepositoryResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MsgForkRepositorySuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	TaskId       uint64        `protobuf:"varint,3,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (x *MsgForkRepositorySuccess) Reset() {
	*x = MsgForkRepositorySuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgForkRepositorySuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgForkRepositorySuccess) ProtoMessage() {}

func (x *MsgForkRepositorySuccess) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgForkRepositorySuccess.ProtoReflect.Descriptor instead.
func (*MsgForkRepositorySuccess) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{113}
}

func (x *MsgForkRepositorySuccess) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgForkRepositorySuccess) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgForkRepositorySuccess) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

type MsgForkRepositorySuccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgForkRepositorySuccessResponse) Reset() {
	*x = MsgForkRepositorySuccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgForkRepositorySuccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgForkRepositorySuccessResponse) ProtoMessage() {}

func (x *MsgForkRepositorySuccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgForkRepositorySuccessResponse.ProtoReflect.Descriptor instead.
func (*MsgForkRepositorySuccessResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{114}
}

func (x *MsgForkRepositorySuccessResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MsgRenameRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Name         string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MsgRenameRepository) Reset() {
	*x = MsgRenameRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRenameRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRenameRepository) ProtoMessage() {}

func (x *MsgRenameRepository) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRenameRepository.ProtoReflect.Descriptor instead.
func (*MsgRenameRepository) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{115}
}

func (x *MsgRenameRepository) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRenameRepository) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgRenameRepository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MsgRenameRepositoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRenameRepositoryResponse) Reset() {
	*x = MsgRenameRepositoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRenameRepositoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRenameRepositoryResponse) ProtoMessage() {}

func (x *MsgRenameRepositoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRenameRepositoryResponse.ProtoReflect.Descriptor instead.
func (*MsgRenameRepositoryResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{116}
}

type MsgUpdateRepositoryDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Description  string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *MsgUpdateRepositoryDescription) Reset() {
	*x = MsgUpdateRepositoryDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateRepositoryDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateRepositoryDescription) ProtoMessage() {}

func (x *MsgUpdateRepositoryDescription) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateRepositoryDescription.ProtoReflect.Descriptor instead.
func (*MsgUpdateRepositoryDescription) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{117}
}

func (x *MsgUpdateRepositoryDescription) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateRepositoryDescription) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgUpdateRepositoryDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type MsgUpdateRepositoryDescriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateRepositoryDescriptionResponse) Reset() {
	*x = MsgUpdateRepositoryDescriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateRepositoryDescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateRepositoryDescriptionResponse) ProtoMessage() {}

func (x *MsgUpdateRepositoryDescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateRepositoryDescriptionResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateRepositoryDescriptionResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{118}
}

type MsgChangeOwner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Owner        string        `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *MsgChangeOwner) Reset() {
	*x = MsgChangeOwner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChangeOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChangeOwner) ProtoMessage() {}

func (x *MsgChangeOwner) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgChangeOwner.ProtoReflect.Descriptor instead.
func (*MsgChangeOwner) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{119}
}

func (x *MsgChangeOwner) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgChangeOwner) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgChangeOwner) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

type MsgChangeOwnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgChangeOwnerResponse) Reset() {
	*x = MsgChangeOwnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChangeOwnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChangeOwnerResponse) ProtoMessage() {}

func (x *MsgChangeOwnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgChangeOwnerResponse.ProtoReflect.Descriptor instead.
func (*MsgChangeOwnerResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{120}
}

type MsgUpdateRepositoryCollaborator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	User         string        `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Role         string        `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *MsgUpdateRepositoryCollaborator) Reset() {
	*x = MsgUpdateRepositoryCollaborator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateRepositoryCollaborator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateRepositoryCollaborator) ProtoMessage() {}

func (x *MsgUpdateRepositoryCollaborator) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateRepositoryCollaborator.ProtoReflect.Descriptor instead.
func (*MsgUpdateRepositoryCollaborator) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{121}
}

func (x *MsgUpdateRepositoryCollaborator) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateRepositoryCollaborator) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgUpdateRepositoryCollaborator) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *MsgUpdateRepositoryCollaborator) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type MsgUpdateRepositoryCollaboratorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateRepositoryCollaboratorResponse) Reset() {
	*x = MsgUpdateRepositoryCollaboratorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateRepositoryCollaboratorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateRepositoryCollaboratorResponse) ProtoMessage() {}

func (x *MsgUpdateRepositoryCollaboratorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateRepositoryCollaboratorResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateRepositoryCollaboratorResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{122}
}

type MsgRemoveRepositoryCollaborator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	User         string        `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *MsgRemoveRepositoryCollaborator) Reset() {
	*x = MsgRemoveRepositoryCollaborator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemoveRepositoryCollaborator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemoveRepositoryCollaborator) ProtoMessage() {}

func (x *MsgRemoveRepositoryCollaborator) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemoveRepositoryCollaborator.ProtoReflect.Descriptor instead.
func (*MsgRemoveRepositoryCollaborator) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{123}
}

func (x *MsgRemoveRepositoryCollaborator) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRemoveRepositoryCollaborator) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgRemoveRepositoryCollaborator) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type MsgRemoveRepositoryCollaboratorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRemoveRepositoryCollaboratorResponse) Reset() {
	*x = MsgRemoveRepositoryCollaboratorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemoveRepositoryCollaboratorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemoveRepositoryCollaboratorResponse) ProtoMessage() {}

func (x *MsgRemoveRepositoryCollaboratorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRemoveRepositoryCollaboratorResponse.ProtoReflect.Descriptor instead.
func (*MsgRemoveRepositoryCollaboratorResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{124}
}

type MsgCreateRepositoryLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Name         string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Color        string        `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	Description  string        `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *MsgCreateRepositoryLabel) Reset() {
	*x = MsgCreateRepositoryLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateRepositoryLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateRepositoryLabel) ProtoMessage() {}

func (x *MsgCreateRepositoryLabel) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateRepositoryLabel.ProtoReflect.Descriptor instead.
func (*MsgCreateRepositoryLabel) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{125}
}

func (x *MsgCreateRepositoryLabel) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreateRepositoryLabel) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgCreateRepositoryLabel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgCreateRepositoryLabel) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *MsgCreateRepositoryLabel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type MsgCreateRepositoryLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgCreateRepositoryLabelResponse) Reset() {
	*x = MsgCreateRepositoryLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateRepositoryLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateRepositoryLabelResponse) ProtoMessage() {}

func (x *MsgCreateRepositoryLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateRepositoryLabelResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateRepositoryLabelResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{126}
}

func (x *MsgCreateRepositoryLabelResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MsgUpdateRepositoryLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	LabelId      uint64        `protobuf:"varint,3,opt,name=labelId,proto3" json:"labelId,omitempty"`
	Name         string        `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Color        string        `protobuf:"bytes,5,opt,name=color,proto3" json:"color,omitempty"`
	Description  string        `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *MsgUpdateRepositoryLabel) Reset() {
	*x = MsgUpdateRepositoryLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateRepositoryLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateRepositoryLabel) ProtoMessage() {}

func (x *MsgUpdateRepositoryLabel) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateRepositoryLabel.ProtoReflect.Descriptor instead.
func (*MsgUpdateRepositoryLabel) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{127}
}

func (x *MsgUpdateRepositoryLabel) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateRepositoryLabel) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgUpdateRepositoryLabel) GetLabelId() uint64 {
	if x != nil {
		return x.LabelId
	}
	return 0
}

func (x *MsgUpdateRepositoryLabel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgUpdateRepositoryLabel) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *MsgUpdateRepositoryLabel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type MsgUpdateRepositoryLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateRepositoryLabelResponse) Reset() {
	*x = MsgUpdateRepositoryLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateRepositoryLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateRepositoryLabelResponse) ProtoMessage() {}

func (x *MsgUpdateRepositoryLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateRepositoryLabelResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateRepositoryLabelResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{128}
}

type MsgDeleteRepositoryLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	LabelId      uint64        `protobuf:"varint,3,opt,name=labelId,proto3" json:"labelId,omitempty"`
}

func (x *MsgDeleteRepositoryLabel) Reset() {
	*x = MsgDeleteRepositoryLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteRepositoryLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteRepositoryLabel) ProtoMessage() {}

func (x *MsgDeleteRepositoryLabel) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteRepositoryLabel.ProtoReflect.Descriptor instead.
func (*MsgDeleteRepositoryLabel) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{129}
}

func (x *MsgDeleteRepositoryLabel) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgDeleteRepositoryLabel) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

func (x *MsgDeleteRepositoryLabel) GetLabelId() uint64 {
	if x != nil {
		return x.LabelId
	}
	return 0
}

type MsgDeleteRepositoryLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteRepositoryLabelResponse) Reset() {
	*x = MsgDeleteRepositoryLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteRepositoryLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteRepositoryLabelResponse) ProtoMessage() {}

func (x *MsgDeleteRepositoryLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteRepositoryLabelResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteRepositoryLabelResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{130}
}

type MsgToggleRepositoryForking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
}

func (x *MsgToggleRepositoryForking) Reset() {
	*x = MsgToggleRepositoryForking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgToggleRepositoryForking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToggleRepositoryForking) ProtoMessage() {}

func (x *MsgToggleRepositoryForking) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgToggleRepositoryForking.ProtoReflect.Descriptor instead.
func (*MsgToggleRepositoryForking) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{131}
}

func (x *MsgToggleRepositoryForking) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgToggleRepositoryForking) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

type MsgToggleRepositoryForkingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowForking bool `protobuf:"varint,1,opt,name=allowForking,proto3" json:"allowForking,omitempty"`
}

func (x *MsgToggleRepositoryForkingResponse) Reset() {
	*x = MsgToggleRepositoryForkingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgToggleRepositoryForkingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToggleRepositoryForkingResponse) ProtoMessage() {}

func (x *MsgToggleRepositoryForkingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgToggleRepositoryForkingResponse.ProtoReflect.Descriptor instead.
func (*MsgToggleRepositoryForkingResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{132}
}

func (x *MsgToggleRepositoryForkingResponse) GetAllowForking() bool {
	if x != nil {
		return x.AllowForking
	}
	return false
}

type MsgToggleArweaveBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
}

func (x *MsgToggleArweaveBackup) Reset() {
	*x = MsgToggleArweaveBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgToggleArweaveBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToggleArweaveBackup) ProtoMessage() {}

func (x *MsgToggleArweaveBackup) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgToggleArweaveBackup.ProtoReflect.Descriptor instead.
func (*MsgToggleArweaveBackup) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{133}
}

func (x *MsgToggleArweaveBackup) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgToggleArweaveBackup) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

type MsgToggleArweaveBackupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnableArweaveBackup bool `protobuf:"varint,1,opt,name=enableArweaveBackup,proto3" json:"enableArweaveBackup,omitempty"`
}

func (x *MsgToggleArweaveBackupResponse) Reset() {
	*x = MsgToggleArweaveBackupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgToggleArweaveBackupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToggleArweaveBackupResponse) ProtoMessage() {}

func (x *MsgToggleArweaveBackupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgToggleArweaveBackupResponse.ProtoReflect.Descriptor instead.
func (*MsgToggleArweaveBackupResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{134}
}

func (x *MsgToggleArweaveBackupResponse) GetEnableArweaveBackup() bool {
	if x != nil {
		return x.EnableArweaveBackup
	}
	return false
}

type MsgDeleteRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId *RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
}

func (x *MsgDeleteRepository) Reset() {
	*x = MsgDeleteRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteRepository) ProtoMessage() {}

func (x *MsgDeleteRepository) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteRepository.ProtoReflect.Descriptor instead.
func (*MsgDeleteRepository) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{135}
}

func (x *MsgDeleteRepository) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgDeleteRepository) GetRepositoryId() *RepositoryId {
	if x != nil {
		return x.RepositoryId
	}
	return nil
}

type MsgDeleteRepositoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteRepositoryResponse) Reset() {
	*x = MsgDeleteRepositoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteRepositoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteRepositoryResponse) ProtoMessage() {}

func (x *MsgDeleteRepositoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteRepositoryResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteRepositoryResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{136}
}

type MsgCreateUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	Bio       string `protobuf:"bytes,5,opt,name=bio,proto3" json:"bio,omitempty"`
}

func (x *MsgCreateUser) Reset() {
	*x = MsgCreateUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateUser) ProtoMessage() {}

func (x *MsgCreateUser) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateUser.ProtoReflect.Descriptor instead.
func (*MsgCreateUser) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{137}
}

func (x *MsgCreateUser) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreateUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *MsgCreateUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgCreateUser) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *MsgCreateUser) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

type MsgCreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgCreateUserResponse) Reset() {
	*x = MsgCreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateUserResponse) ProtoMessage() {}

func (x *MsgCreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateUserResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateUserResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{138}
}

func (x *MsgCreateUserResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MsgUpdateUserUsername struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *MsgUpdateUserUsername) Reset() {
	*x = MsgUpdateUserUsername{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateUserUsername) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateUserUsername) ProtoMessage() {}

func (x *MsgUpdateUserUsername) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateUserUsername.ProtoReflect.Descriptor instead.
func (*MsgUpdateUserUsername) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{139}
}

func (x *MsgUpdateUserUsername) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateUserUsername) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type MsgUpdateUserUsernameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateUserUsernameResponse) Reset() {
	*x = MsgUpdateUserUsernameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateUserUsernameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateUserUsernameResponse) ProtoMessage() {}

func (x *MsgUpdateUserUsernameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateUserUsernameResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateUserUsernameResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{140}
}

type MsgUpdateUserName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MsgUpdateUserName) Reset() {
	*x = MsgUpdateUserName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateUserName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateUserName) ProtoMessage() {}

func (x *MsgUpdateUserName) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateUserName.ProtoReflect.Descriptor instead.
func (*MsgUpdateUserName) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{141}
}

func (x *MsgUpdateUserName) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateUserName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MsgUpdateUserNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateUserNameResponse) Reset() {
	*x = MsgUpdateUserNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateUserNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateUserNameResponse) ProtoMessage() {}

func (x *MsgUpdateUserNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateUserNameResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateUserNameResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{142}
}

type MsgUpdateUserBio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Bio     string `protobuf:"bytes,2,opt,name=bio,proto3" json:"bio,omitempty"`
}

func (x *MsgUpdateUserBio) Reset() {
	*x = MsgUpdateUserBio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateUserBio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateUserBio) ProtoMessage() {}

func (x *MsgUpdateUserBio) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateUserBio.ProtoReflect.Descriptor instead.
func (*MsgUpdateUserBio) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{143}
}

func (x *MsgUpdateUserBio) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateUserBio) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

type MsgUpdateUserBioResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateUserBioResponse) Reset() {
	*x = MsgUpdateUserBioResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateUserBioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateUserBioResponse) ProtoMessage() {}

func (x *MsgUpdateUserBioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateUserBioResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateUserBioResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{144}
}

type MsgUpdateUserAvatar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Url     string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *MsgUpdateUserAvatar) Reset() {
	*x = MsgUpdateUserAvatar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateUserAvatar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateUserAvatar) ProtoMessage() {}

func (x *MsgUpdateUserAvatar) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateUserAvatar.ProtoReflect.Descriptor instead.
func (*MsgUpdateUserAvatar) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{145}
}

func (x *MsgUpdateUserAvatar) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdateUserAvatar) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type MsgUpdateUserAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateUserAvatarResponse) Reset() {
	*x = MsgUpdateUserAvatarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateUserAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateUserAvatarResponse) ProtoMessage() {}

func (x *MsgUpdateUserAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateUserAvatarResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateUserAvatarResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{146}
}

type MsgDeleteUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgDeleteUser) Reset() {
	*x = MsgDeleteUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteUser) ProtoMessage() {}

func (x *MsgDeleteUser) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteUser.ProtoReflect.Descriptor instead.
func (*MsgDeleteUser) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{147}
}

func (x *MsgDeleteUser) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgDeleteUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MsgDeleteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteUserResponse) Reset() {
	*x = MsgDeleteUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteUserResponse) ProtoMessage() {}

func (x *MsgDeleteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteUserResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteUserResponse) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{148}
}

type MsgSetBranch_Branch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sha  string `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
}

func (x *MsgSetBranch_Branch) Reset() {
	*x = MsgSetBranch_Branch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetBranch_Branch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetBranch_Branch) ProtoMessage() {}

func (x *MsgSetBranch_Branch) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSetBranch_Branch.ProtoReflect.Descriptor instead.
func (*MsgSetBranch_Branch) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{15, 0}
}

func (x *MsgSetBranch_Branch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgSetBranch_Branch) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

type MsgMultiSetBranch_Branch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sha  string `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
}

func (x *MsgMultiSetBranch_Branch) Reset() {
	*x = MsgMultiSetBranch_Branch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMultiSetBranch_Branch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMultiSetBranch_Branch) ProtoMessage() {}

func (x *MsgMultiSetBranch_Branch) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMultiSetBranch_Branch.ProtoReflect.Descriptor instead.
func (*MsgMultiSetBranch_Branch) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{19, 0}
}

func (x *MsgMultiSetBranch_Branch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgMultiSetBranch_Branch) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

type MsgSetTag_Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sha  string `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
}

func (x *MsgSetTag_Tag) Reset() {
	*x = MsgSetTag_Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetTag_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetTag_Tag) ProtoMessage() {}

func (x *MsgSetTag_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgSetTag_Tag.ProtoReflect.Descriptor instead.
func (*MsgSetTag_Tag) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{25, 0}
}

func (x *MsgSetTag_Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgSetTag_Tag) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

type MsgMultiSetTag_Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sha  string `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
}

func (x *MsgMultiSetTag_Tag) Reset() {
	*x = MsgMultiSetTag_Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitopia_tx_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMultiSetTag_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMultiSetTag_Tag) ProtoMessage() {}

func (x *MsgMultiSetTag_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_gitopia_tx_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMultiSetTag_Tag.ProtoReflect.Descriptor instead.
func (*MsgMultiSetTag_Tag) Descriptor() ([]byte, []int) {
	return file_gitopia_tx_proto_rawDescGZIP(), []int{27, 0}
}

func (x *MsgMultiSetTag_Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgMultiSetTag_Tag) GetSha() string {
	if x != nil {
		return x.Sha
	}
	return ""
}

var File_gitopia_tx_proto protoreflect.FileDescriptor

var file_gitopia_tx_proto_rawDesc = []byte{
	0x0a, 0x10, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1a, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x1a, 0x12,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2f, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2f, 0x74, 0x61, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2f, 0x70, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2f, 0x64, 0x61, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2f, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2f, 0x77, 0x68, 0x6f, 0x69,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x01, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x25, 0x0a, 0x23, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb6,
	0x01, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x22, 0x27, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x0d, 0x4d,
	0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x17, 0x0a,
	0x15, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xe8, 0x01, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52,
	0x65, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x48, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x32, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x26, 0x0a, 0x24,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x66, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe5, 0x01, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52,
	0x65, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x48, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x32, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x23, 0x0a, 0x21,
	0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x17, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x0a, 0x20, 0x4d, 0x73,
	0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xfb,
	0x01, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52,
	0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x4d, 0x0a,
	0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x1a, 0x2e, 0x0a, 0x06,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x68,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x68, 0x61, 0x22, 0x16, 0x0a, 0x14,
	0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x89, 0x02, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65,
	0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x56, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x42, 0x04, 0xc8,
	0xde, 0x1f, 0x00, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x1a, 0x2e, 0x0a,
	0x06, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x68, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x68, 0x61, 0x22, 0x1b, 0x0a,
	0x19, 0x4d, 0x73, 0x67, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x4d,
	0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x22, 0x19, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xa0, 0x01, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x65, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xe9, 0x01, 0x0a, 0x09, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x54, 0x61, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x41,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x54,
	0x61, 0x67, 0x2e, 0x54, 0x61, 0x67, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x1a, 0x2b, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x68, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x68, 0x61, 0x22, 0x13,
	0x0a, 0x11, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x53, 0x65, 0x74, 0x54, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x74, 0x54, 0x61, 0x67, 0x2e, 0x54,
	0x61, 0x67, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x2b,
	0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x68, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x68, 0x61, 0x22, 0x18, 0x0a, 0x16, 0x4d,
	0x73, 0x67, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x16, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x95,
	0x01, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52,
	0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x61, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x61, 0x6f, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x41,
	0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x99, 0x01, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x64, 0x61, 0x6f, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x1d, 0x0a, 0x1b,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x0f, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x6f, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x6f, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xd6, 0x02, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x72, 0x61, 0x66, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64,
	0x72, 0x61, 0x66, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x54, 0x61, 0x67, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x54, 0x61, 0x67, 0x22, 0x2a, 0x0a, 0x18, 0x4d, 0x73,
	0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x92, 0x02, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x64, 0x72, 0x61, 0x66, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x64, 0x72, 0x61, 0x66, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x54, 0x61, 0x67, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x54, 0x61, 0x67, 0x22, 0x1a, 0x0a, 0x18, 0x4d,
	0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xb8, 0x03, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x68, 0x65, 0x61, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x5a, 0x0a, 0x10,
	0x68, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x10, 0x68, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61,
	0x73, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x5a, 0x0a, 0x10, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x10, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x40, 0x0a, 0x1c,
	0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x69, 0x64, 0x22, 0x5b,
	0x0a, 0x19, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x4d,
	0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x6d, 0x0a, 0x1f, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x29, 0x0a, 0x27, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a, 0x19, 0x4d, 0x73,
	0x67, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x23, 0x0a,
	0x21, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x53, 0x68, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x53, 0x68, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x36, 0x0a,
	0x1e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x64, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x50,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x22, 0x24, 0x0a, 0x22, 0x4d,
	0x73, 0x67, 0x41, 0x64, 0x64, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x67, 0x0a, 0x1d, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x22, 0x27, 0x0a, 0x25, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x64, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x22, 0x4d, 0x73, 0x67,
	0x41, 0x64, 0x64, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x67, 0x0a, 0x1d, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x22, 0x27, 0x0a, 0x25, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x75, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x50, 0x75, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x21, 0x0a, 0x1f, 0x4d, 0x73, 0x67, 0x41,
	0x64, 0x64, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x1a, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x24, 0x0a, 0x22, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x14, 0x4d,
	0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1e, 0x0a,
	0x1c, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb2, 0x01,
	0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x0c, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x65, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x21, 0x0a, 0x1f, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x0a, 0x13, 0x4d, 0x73,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x1d, 0x0a,
	0x1b, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x57, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x0a, 0x14,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1e, 0x0a, 0x1c, 0x4d, 0x73,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x0a, 0x12, 0x4d, 0x73,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x1c, 0x0a, 0x1a,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x0c, 0x4d, 0x73,
	0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x61, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x96, 0x02, 0x0a,
	0x10, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x66, 0x66, 0x48, 0x75, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x69, 0x66, 0x66, 0x48, 0x75, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x41,
	0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2a, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x72, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3c, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x1a, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x88, 0x02, 0x0a, 0x0e,
	0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69,
	0x69, 0x64, 0x22, 0x55, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x23, 0x0a, 0x21, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x67,
	0x67, 0x6c, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x54, 0x6f,
	0x67, 0x67, 0x6c, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x5e, 0x0a, 0x14,
	0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x22, 0x1e, 0x0a, 0x1c,
	0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x0a, 0x17,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x22,
	0x21, 0x0a, 0x1f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x63, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x1b, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x41, 0x64,
	0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x1e, 0x0a, 0x1c,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x0a, 0x0e,
	0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x7b, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x71, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52,
	0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x22, 0xb9, 0x01, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65,
	0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x21,
	0x0a, 0x1f, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xaf, 0x01, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xa0, 0x01, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x20, 0x4d, 0x73, 0x67, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52,
	0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xb0, 0x01, 0x0a, 0x1e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a,
	0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8,
	0xde, 0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x26, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x94, 0x01,
	0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb7,
	0x01, 0x0a, 0x1f, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x29, 0x0a, 0x27, 0x4d, 0x73, 0x67, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43,
	0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x1f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x61,
	0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x29, 0x0a, 0x27, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x20, 0x4d,
	0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xee, 0x01, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x22, 0x0a, 0x20, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x22, 0x0a, 0x20, 0x4d, 0x73, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8a, 0x01,
	0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x22, 0x4d, 0x73,
	0x67, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x46, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x22, 0x86, 0x01, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x41, 0x72, 0x77, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52,
	0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x52, 0x0a,
	0x1e, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x41, 0x72, 0x77, 0x65, 0x61, 0x76,
	0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x13, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x77, 0x65, 0x61, 0x76, 0x65,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x41, 0x72, 0x77, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x22, 0x83, 0x01, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62,
	0x69, 0x6f, 0x22, 0x27, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x15, 0x4d,
	0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x4d, 0x73,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x11, 0x4d,
	0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1b,
	0x0a, 0x19, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x0a, 0x10, 0x4d,
	0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x6f, 0x22, 0x1a, 0x0a, 0x18, 0x4d,
	0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x0d, 0x4d, 0x73, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x31, 0x0a,
	0x12, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x49, 0x54, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45,
	0x52, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x10, 0x01,
	0x32, 0x93, 0x4a, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x94, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x3f,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7f, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x30, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x38, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x29,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x31, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x29, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x31, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x29, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x1a, 0x31, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x12, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x73, 0x67, 0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x1a, 0x30, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a,
	0x0e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12,
	0x2d, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x1a, 0x35,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x2b, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x1a, 0x33, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x11, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x30, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x1a, 0x38,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x54,
	0x61, 0x67, 0x12, 0x25, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x54, 0x61, 0x67, 0x1a, 0x2d, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x0b, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x53, 0x65, 0x74, 0x54, 0x61, 0x67, 0x12, 0x2a, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x74,
	0x54, 0x61, 0x67, 0x1a, 0x32, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x74, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x12, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x1a, 0x30,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x76, 0x0a, 0x0e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x61, 0x67, 0x12, 0x2d, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61,
	0x67, 0x1a, 0x35, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x73, 0x67, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a,
	0x30, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7c, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2f, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x1a, 0x37, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x70, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x2b, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x33, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x73, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x12, 0x2c, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x1a, 0x34, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73,
	0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x2c, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x1a, 0x34, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x2c, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x1a, 0x34, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x8e, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x35, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x1a, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0xa0, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x43, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65,
	0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x35, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73,
	0x67, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x65,
	0x72, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x50, 0x75,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x32,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x53,
	0x65, 0x74, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x1a, 0x3a, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x91,
	0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x12, 0x36, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x50, 0x75,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x73, 0x1a, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x73, 0x12, 0x39, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x1a, 0x41, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x91, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x12, 0x36, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x50,
	0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x65, 0x73, 0x1a, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x65, 0x73, 0x12, 0x39, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x1a, 0x41, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x88, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x33, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x3b,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41,
	0x64, 0x64, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x17,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x36, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a,
	0x3e, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7f, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x67, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x28, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x1a, 0x30, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x09, 0x52, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x44, 0x61, 0x6f, 0x12, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x6f,
	0x1a, 0x30, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x3b, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x12, 0x2f, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x57, 0x65, 0x62, 0x73, 0x69,
	0x74, 0x65, 0x1a, 0x37, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x57, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x30, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x38, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x0f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x2e, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x1a,
	0x36, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x61, 0x6f, 0x12, 0x28, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x1a, 0x30,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x73, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x2c, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x1a,
	0x34, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6d, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x2a,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x1a, 0x32, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x2f, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x1a, 0x37, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8e, 0x01, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3d,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a,
	0x10, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x2f, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x73, 0x67, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x1a, 0x37, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x11, 0x41,
	0x64, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73,
	0x12, 0x30, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73,
	0x67, 0x41, 0x64, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x65, 0x73, 0x1a, 0x38, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a,
	0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x65, 0x73, 0x12, 0x33, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x1a, 0x3b, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2d, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x35, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7f, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x30, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x38, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12,
	0x2a, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x1a, 0x32, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7c, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x2f, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x1a, 0x37, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01,
	0x0a, 0x14, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x33, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x3b, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x76, 0x6f,
	0x6b, 0x65, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2d, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x35, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x8b, 0x01, 0x0a, 0x15, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x34, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x1a, 0x3c, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73,
	0x67, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c,
	0x0a, 0x10, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x2f, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x1a, 0x37, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9d, 0x01, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x42, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x0b,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x2a, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x1a, 0x32, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa0, 0x01, 0x0a, 0x1c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3b, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x43, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62,
	0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa0,
	0x01, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x3b, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x43, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x8b, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x34, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x1a, 0x3c, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x8b, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x34, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x1a,
	0x3c, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8b, 0x01,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x34, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x1a, 0x3c, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x10, 0x53,
	0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12,
	0x2f, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67,
	0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x1a, 0x37, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73,
	0x67, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x17, 0x54, 0x6f,
	0x67, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x1a, 0x3e, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x6f,
	0x67, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01,
	0x0a, 0x13, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x41, 0x72, 0x77, 0x65, 0x61, 0x76, 0x65, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x32, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x41, 0x72, 0x77, 0x65,
	0x61, 0x76, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x1a, 0x3a, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65,
	0x41, 0x72, 0x77, 0x65, 0x61, 0x76, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2f, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x37, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x29, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x31, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67,
	0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x82, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x39, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x35, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6f, 0x12, 0x2c, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6f, 0x1a, 0x34, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7c, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x2f, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x1a, 0x37, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6a, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x29, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e,
	0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x31, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x97, 0x01, 0x0a, 0x19,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x66, 0x12, 0x38, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f,
	0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x52, 0x65, 0x66, 0x1a, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69,
	0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x66, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x66,
	0x12, 0x35, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70,
	0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73,
	0x67, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x66, 0x1a, 0x3d, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2e, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69,
	0x61, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x66, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2f, 0x67, 0x69, 0x74,
	0x6f, 0x70, 0x69, 0x61, 0x2f, 0x78, 0x2f, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x69, 0x61, 0x2f, 0x6d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x32, 0x3b, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gitopia_tx_proto_rawDescOnce sync.Once
	file_gitopia_tx_proto_rawDescData = file_gitopia_tx_proto_rawDesc
)

func file_gitopia_tx_proto_rawDescGZIP() []byte {
	file_gitopia_tx_proto_rawDescOnce.Do(func() {
		file_gitopia_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_gitopia_tx_proto_rawDescData)
	})
	return file_gitopia_tx_proto_rawDescData
}

var file_gitopia_tx_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gitopia_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 153)
var file_gitopia_tx_proto_goTypes = []interface{}{
	(ProviderPermission)(0),                         // 0: gitopia.gitopia.gitopia.v2.ProviderPermission
	(*MsgRevokeProviderPermission)(nil),             // 1: gitopia.gitopia.gitopia.v2.MsgRevokeProviderPermission
	(*MsgRevokeProviderPermissionResponse)(nil),     // 2: gitopia.gitopia.gitopia.v2.MsgRevokeProviderPermissionResponse
	(*MsgAuthorizeProvider)(nil),                    // 3: gitopia.gitopia.gitopia.v2.MsgAuthorizeProvider
	(*MsgAuthorizeProviderResponse)(nil),            // 4: gitopia.gitopia.gitopia.v2.MsgAuthorizeProviderResponse
	(*MsgCreateTask)(nil),                           // 5: gitopia.gitopia.gitopia.v2.MsgCreateTask
	(*MsgCreateTaskResponse)(nil),                   // 6: gitopia.gitopia.gitopia.v2.MsgCreateTaskResponse
	(*MsgUpdateTask)(nil),                           // 7: gitopia.gitopia.gitopia.v2.MsgUpdateTask
	(*MsgUpdateTaskResponse)(nil),                   // 8: gitopia.gitopia.gitopia.v2.MsgUpdateTaskResponse
	(*MsgDeleteTask)(nil),                           // 9: gitopia.gitopia.gitopia.v2.MsgDeleteTask
	(*MsgUpdateRepositoryBackupRef)(nil),            // 10: gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryBackupRef
	(*MsgUpdateRepositoryBackupRefResponse)(nil),    // 11: gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryBackupRefResponse
	(*MsgAddRepositoryBackupRef)(nil),               // 12: gitopia.gitopia.gitopia.v2.MsgAddRepositoryBackupRef
	(*MsgAddRepositoryBackupRefResponse)(nil),       // 13: gitopia.gitopia.gitopia.v2.MsgAddRepositoryBackupRefResponse
	(*MsgDeleteTaskResponse)(nil),                   // 14: gitopia.gitopia.gitopia.v2.MsgDeleteTaskResponse
	(*MsgDeleteStorageProviderResponse)(nil),        // 15: gitopia.gitopia.gitopia.v2.MsgDeleteStorageProviderResponse
	(*MsgSetBranch)(nil),                            // 16: gitopia.gitopia.gitopia.v2.MsgSetBranch
	(*MsgSetBranchResponse)(nil),                    // 17: gitopia.gitopia.gitopia.v2.MsgSetBranchResponse
	(*MsgSetDefaultBranch)(nil),                     // 18: gitopia.gitopia.gitopia.v2.MsgSetDefaultBranch
	(*MsgSetDefaultBranchResponse)(nil),             // 19: gitopia.gitopia.gitopia.v2.MsgSetDefaultBranchResponse
	(*MsgMultiSetBranch)(nil),                       // 20: gitopia.gitopia.gitopia.v2.MsgMultiSetBranch
	(*MsgMultiSetBranchResponse)(nil),               // 21: gitopia.gitopia.gitopia.v2.MsgMultiSetBranchResponse
	(*MsgDeleteBranch)(nil),                         // 22: gitopia.gitopia.gitopia.v2.MsgDeleteBranch
	(*MsgDeleteBranchResponse)(nil),                 // 23: gitopia.gitopia.gitopia.v2.MsgDeleteBranchResponse
	(*MsgMultiDeleteBranch)(nil),                    // 24: gitopia.gitopia.gitopia.v2.MsgMultiDeleteBranch
	(*MsgMultiDeleteBranchResponse)(nil),            // 25: gitopia.gitopia.gitopia.v2.MsgMultiDeleteBranchResponse
	(*MsgSetTag)(nil),                               // 26: gitopia.gitopia.gitopia.v2.MsgSetTag
	(*MsgSetTagResponse)(nil),                       // 27: gitopia.gitopia.gitopia.v2.MsgSetTagResponse
	(*MsgMultiSetTag)(nil),                          // 28: gitopia.gitopia.gitopia.v2.MsgMultiSetTag
	(*MsgMultiSetTagResponse)(nil),                  // 29: gitopia.gitopia.gitopia.v2.MsgMultiSetTagResponse
	(*MsgDeleteTag)(nil),                            // 30: gitopia.gitopia.gitopia.v2.MsgDeleteTag
	(*MsgDeleteTagResponse)(nil),                    // 31: gitopia.gitopia.gitopia.v2.MsgDeleteTagResponse
	(*MsgMultiDeleteTag)(nil),                       // 32: gitopia.gitopia.gitopia.v2.MsgMultiDeleteTag
	(*MsgMultiDeleteTagResponse)(nil),               // 33: gitopia.gitopia.gitopia.v2.MsgMultiDeleteTagResponse
	(*MsgAddMember)(nil),                            // 34: gitopia.gitopia.gitopia.v2.MsgAddMember
	(*MsgAddMemberResponse)(nil),                    // 35: gitopia.gitopia.gitopia.v2.MsgAddMemberResponse
	(*MsgUpdateMemberRole)(nil),                     // 36: gitopia.gitopia.gitopia.v2.MsgUpdateMemberRole
	(*MsgUpdateMemberRoleResponse)(nil),             // 37: gitopia.gitopia.gitopia.v2.MsgUpdateMemberRoleResponse
	(*MsgRemoveMember)(nil),                         // 38: gitopia.gitopia.gitopia.v2.MsgRemoveMember
	(*MsgRemoveMemberResponse)(nil),                 // 39: gitopia.gitopia.gitopia.v2.MsgRemoveMemberResponse
	(*MsgCreateRelease)(nil),                        // 40: gitopia.gitopia.gitopia.v2.MsgCreateRelease
	(*MsgCreateReleaseResponse)(nil),                // 41: gitopia.gitopia.gitopia.v2.MsgCreateReleaseResponse
	(*MsgUpdateRelease)(nil),                        // 42: gitopia.gitopia.gitopia.v2.MsgUpdateRelease
	(*MsgUpdateReleaseResponse)(nil),                // 43: gitopia.gitopia.gitopia.v2.MsgUpdateReleaseResponse
	(*MsgDeleteRelease)(nil),                        // 44: gitopia.gitopia.gitopia.v2.MsgDeleteRelease
	(*MsgDeleteReleaseResponse)(nil),                // 45: gitopia.gitopia.gitopia.v2.MsgDeleteReleaseResponse
	(*MsgCreatePullRequest)(nil),                    // 46: gitopia.gitopia.gitopia.v2.MsgCreatePullRequest
	(*MsgCreatePullRequestResponse)(nil),            // 47: gitopia.gitopia.gitopia.v2.MsgCreatePullRequestResponse
	(*MsgUpdatePullRequestTitle)(nil),               // 48: gitopia.gitopia.gitopia.v2.MsgUpdatePullRequestTitle
	(*MsgUpdatePullRequestTitleResponse)(nil),       // 49: gitopia.gitopia.gitopia.v2.MsgUpdatePullRequestTitleResponse
	(*MsgUpdatePullRequestDescription)(nil),         // 50: gitopia.gitopia.gitopia.v2.MsgUpdatePullRequestDescription
	(*MsgUpdatePullRequestDescriptionResponse)(nil), // 51: gitopia.gitopia.gitopia.v2.MsgUpdatePullRequestDescriptionResponse
	(*MsgInvokeMergePullRequest)(nil),               // 52: gitopia.gitopia.gitopia.v2.MsgInvokeMergePullRequest
	(*MsgInvokeMergePullRequestResponse)(nil),       // 53: gitopia.gitopia.gitopia.v2.MsgInvokeMergePullRequestResponse
	(*MsgSetPullRequestState)(nil),                  // 54: gitopia.gitopia.gitopia.v2.MsgSetPullRequestState
	(*MsgSetPullRequestStateResponse)(nil),          // 55: gitopia.gitopia.gitopia.v2.MsgSetPullRequestStateResponse
	(*MsgAddPullRequestReviewers)(nil),              // 56: gitopia.gitopia.gitopia.v2.MsgAddPullRequestReviewers
	(*MsgAddPullRequestReviewersResponse)(nil),      // 57: gitopia.gitopia.gitopia.v2.MsgAddPullRequestReviewersResponse
	(*MsgRemovePullRequestReviewers)(nil),           // 58: gitopia.gitopia.gitopia.v2.MsgRemovePullRequestReviewers
	(*MsgRemovePullRequestReviewersResponse)(nil),   // 59: gitopia.gitopia.gitopia.v2.MsgRemovePullRequestReviewersResponse
	(*MsgAddPullRequestAssignees)(nil),              // 60: gitopia.gitopia.gitopia.v2.MsgAddPullRequestAssignees
	(*MsgAddPullRequestAssigneesResponse)(nil),      // 61: gitopia.gitopia.gitopia.v2.MsgAddPullRequestAssigneesResponse
	(*MsgRemovePullRequestAssignees)(nil),           // 62: gitopia.gitopia.gitopia.v2.MsgRemovePullRequestAssignees
	(*MsgRemovePullRequestAssigneesResponse)(nil),   // 63: gitopia.gitopia.gitopia.v2.MsgRemovePullRequestAssigneesResponse
	(*MsgAddPullRequestLabels)(nil),                 // 64: gitopia.gitopia.gitopia.v2.MsgAddPullRequestLabels
	(*MsgAddPullRequestLabelsResponse)(nil),         // 65: gitopia.gitopia.gitopia.v2.MsgAddPullRequestLabelsResponse
	(*MsgRemovePullRequestLabels)(nil),              // 66: gitopia.gitopia.gitopia.v2.MsgRemovePullRequestLabels
	(*MsgRemovePullRequestLabelsResponse)(nil),      // 67: gitopia.gitopia.gitopia.v2.MsgRemovePullRequestLabelsResponse
	(*MsgDeletePullRequest)(nil),                    // 68: gitopia.gitopia.gitopia.v2.MsgDeletePullRequest
	(*MsgDeletePullRequestResponse)(nil),            // 69: gitopia.gitopia.gitopia.v2.MsgDeletePullRequestResponse
	(*MsgCreateDao)(nil),                            // 70: gitopia.gitopia.gitopia.v2.MsgCreateDao
	(*MsgCreateDaoResponse)(nil),                    // 71: gitopia.gitopia.gitopia.v2.MsgCreateDaoResponse
	(*MsgRenameDao)(nil),                            // 72: gitopia.gitopia.gitopia.v2.MsgRenameDao
	(*MsgRenameDaoResponse)(nil),                    // 73: gitopia.gitopia.gitopia.v2.MsgRenameDaoResponse
	(*MsgUpdateDaoDescription)(nil),                 // 74: gitopia.gitopia.gitopia.v2.MsgUpdateDaoDescription
	(*MsgUpdateDaoDescriptionResponse)(nil),         // 75: gitopia.gitopia.gitopia.v2.MsgUpdateDaoDescriptionResponse
	(*MsgUpdateDaoWebsite)(nil),                     // 76: gitopia.gitopia.gitopia.v2.MsgUpdateDaoWebsite
	(*MsgUpdateDaoWebsiteResponse)(nil),             // 77: gitopia.gitopia.gitopia.v2.MsgUpdateDaoWebsiteResponse
	(*MsgUpdateDaoLocation)(nil),                    // 78: gitopia.gitopia.gitopia.v2.MsgUpdateDaoLocation
	(*MsgUpdateDaoLocationResponse)(nil),            // 79: gitopia.gitopia.gitopia.v2.MsgUpdateDaoLocationResponse
	(*MsgUpdateDaoAvatar)(nil),                      // 80: gitopia.gitopia.gitopia.v2.MsgUpdateDaoAvatar
	(*MsgUpdateDaoAvatarResponse)(nil),              // 81: gitopia.gitopia.gitopia.v2.MsgUpdateDaoAvatarResponse
	(*MsgDeleteDao)(nil),                            // 82: gitopia.gitopia.gitopia.v2.MsgDeleteDao
	(*MsgDeleteDaoResponse)(nil),                    // 83: gitopia.gitopia.gitopia.v2.MsgDeleteDaoResponse
	(*MsgCreateComment)(nil),                        // 84: gitopia.gitopia.gitopia.v2.MsgCreateComment
	(*MsgCreateCommentResponse)(nil),                // 85: gitopia.gitopia.gitopia.v2.MsgCreateCommentResponse
	(*MsgUpdateComment)(nil),                        // 86: gitopia.gitopia.gitopia.v2.MsgUpdateComment
	(*MsgUpdateCommentResponse)(nil),                // 87: gitopia.gitopia.gitopia.v2.MsgUpdateCommentResponse
	(*MsgDeleteComment)(nil),                        // 88: gitopia.gitopia.gitopia.v2.MsgDeleteComment
	(*MsgDeleteCommentResponse)(nil),                // 89: gitopia.gitopia.gitopia.v2.MsgDeleteCommentResponse
	(*MsgCreateIssue)(nil),                          // 90: gitopia.gitopia.gitopia.v2.MsgCreateIssue
	(*MsgCreateIssueResponse)(nil),                  // 91: gitopia.gitopia.gitopia.v2.MsgCreateIssueResponse
	(*MsgUpdateIssueTitle)(nil),                     // 92: gitopia.gitopia.gitopia.v2.MsgUpdateIssueTitle
	(*MsgUpdateIssueTitleResponse)(nil),             // 93: gitopia.gitopia.gitopia.v2.MsgUpdateIssueTitleResponse
	(*MsgUpdateIssueDescription)(nil),               // 94: gitopia.gitopia.gitopia.v2.MsgUpdateIssueDescription
	(*MsgUpdateIssueDescriptionResponse)(nil),       // 95: gitopia.gitopia.gitopia.v2.MsgUpdateIssueDescriptionResponse
	(*MsgToggleIssueState)(nil),                     // 96: gitopia.gitopia.gitopia.v2.MsgToggleIssueState
	(*MsgToggleIssueStateResponse)(nil),             // 97: gitopia.gitopia.gitopia.v2.MsgToggleIssueStateResponse
	(*MsgAddIssueAssignees)(nil),                    // 98: gitopia.gitopia.gitopia.v2.MsgAddIssueAssignees
	(*MsgAddIssueAssigneesResponse)(nil),            // 99: gitopia.gitopia.gitopia.v2.MsgAddIssueAssigneesResponse
	(*MsgRemoveIssueAssignees)(nil),                 // 100: gitopia.gitopia.gitopia.v2.MsgRemoveIssueAssignees
	(*MsgRemoveIssueAssigneesResponse)(nil),         // 101: gitopia.gitopia.gitopia.v2.MsgRemoveIssueAssigneesResponse
	(*MsgAddIssueLabels)(nil),                       // 102: gitopia.gitopia.gitopia.v2.MsgAddIssueLabels
	(*MsgAddIssueLabelsResponse)(nil),               // 103: gitopia.gitopia.gitopia.v2.MsgAddIssueLabelsResponse
	(*MsgRemoveIssueLabels)(nil),                    // 104: gitopia.gitopia.gitopia.v2.MsgRemoveIssueLabels
	(*MsgRemoveIssueLabelsResponse)(nil),            // 105: gitopia.gitopia.gitopia.v2.MsgRemoveIssueLabelsResponse
	(*MsgDeleteIssue)(nil),                          // 106: gitopia.gitopia.gitopia.v2.MsgDeleteIssue
	(*MsgDeleteIssueResponse)(nil),                  // 107: gitopia.gitopia.gitopia.v2.MsgDeleteIssueResponse
	(*MsgCreateRepository)(nil),                     // 108: gitopia.gitopia.gitopia.v2.MsgCreateRepository
	(*MsgCreateRepositoryResponse)(nil),             // 109: gitopia.gitopia.gitopia.v2.MsgCreateRepositoryResponse
	(*MsgInvokeForkRepository)(nil),                 // 110: gitopia.gitopia.gitopia.v2.MsgInvokeForkRepository
	(*MsgInvokeForkRepositoryResponse)(nil),         // 111: gitopia.gitopia.gitopia.v2.MsgInvokeForkRepositoryResponse
	(*MsgForkRepository)(nil),                       // 112: gitopia.gitopia.gitopia.v2.MsgForkRepository
	(*MsgForkRepositoryResponse)(nil),               // 113: gitopia.gitopia.gitopia.v2.MsgForkRepositoryResponse
	(*MsgForkRepositorySuccess)(nil),                // 114: gitopia.gitopia.gitopia.v2.MsgForkRepositorySuccess
	(*MsgForkRepositorySuccessResponse)(nil),        // 115: gitopia.gitopia.gitopia.v2.MsgForkRepositorySuccessResponse
	(*MsgRenameRepository)(nil),                     // 116: gitopia.gitopia.gitopia.v2.MsgRenameRepository
	(*MsgRenameRepositoryResponse)(nil),             // 117: gitopia.gitopia.gitopia.v2.MsgRenameRepositoryResponse
	(*MsgUpdateRepositoryDescription)(nil),          // 118: gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryDescription
	(*MsgUpdateRepositoryDescriptionResponse)(nil),  // 119: gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryDescriptionResponse
	(*MsgChangeOwner)(nil),                          // 120: gitopia.gitopia.gitopia.v2.MsgChangeOwner
	(*MsgChangeOwnerResponse)(nil),                  // 121: gitopia.gitopia.gitopia.v2.MsgChangeOwnerResponse
	(*MsgUpdateRepositoryCollaborator)(nil),         // 122: gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryCollaborator
	(*MsgUpdateRepositoryCollaboratorResponse)(nil), // 123: gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryCollaboratorResponse
	(*MsgRemoveRepositoryCollaborator)(nil),         // 124: gitopia.gitopia.gitopia.v2.MsgRemoveRepositoryCollaborator
	(*MsgRemoveRepositoryCollaboratorResponse)(nil), // 125: gitopia.gitopia.gitopia.v2.MsgRemoveRepositoryCollaboratorResponse
	(*MsgCreateRepositoryLabel)(nil),                // 126: gitopia.gitopia.gitopia.v2.MsgCreateRepositoryLabel
	(*MsgCreateRepositoryLabelResponse)(nil),        // 127: gitopia.gitopia.gitopia.v2.MsgCreateRepositoryLabelResponse
	(*MsgUpdateRepositoryLabel)(nil),                // 128: gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryLabel
	(*MsgUpdateRepositoryLabelResponse)(nil),        // 129: gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryLabelResponse
	(*MsgDeleteRepositoryLabel)(nil),                // 130: gitopia.gitopia.gitopia.v2.MsgDeleteRepositoryLabel
	(*MsgDeleteRepositoryLabelResponse)(nil),        // 131: gitopia.gitopia.gitopia.v2.MsgDeleteRepositoryLabelResponse
	(*MsgToggleRepositoryForking)(nil),              // 132: gitopia.gitopia.gitopia.v2.MsgToggleRepositoryForking
	(*MsgToggleRepositoryForkingResponse)(nil),      // 133: gitopia.gitopia.gitopia.v2.MsgToggleRepositoryForkingResponse
	(*MsgToggleArweaveBackup)(nil),                  // 134: gitopia.gitopia.gitopia.v2.MsgToggleArweaveBackup
	(*MsgToggleArweaveBackupResponse)(nil),          // 135: gitopia.gitopia.gitopia.v2.MsgToggleArweaveBackupResponse
	(*MsgDeleteRepository)(nil),                     // 136: gitopia.gitopia.gitopia.v2.MsgDeleteRepository
	(*MsgDeleteRepositoryResponse)(nil),             // 137: gitopia.gitopia.gitopia.v2.MsgDeleteRepositoryResponse
	(*MsgCreateUser)(nil),                           // 138: gitopia.gitopia.gitopia.v2.MsgCreateUser
	(*MsgCreateUserResponse)(nil),                   // 139: gitopia.gitopia.gitopia.v2.MsgCreateUserResponse
	(*MsgUpdateUserUsername)(nil),                   // 140: gitopia.gitopia.gitopia.v2.MsgUpdateUserUsername
	(*MsgUpdateUserUsernameResponse)(nil),           // 141: gitopia.gitopia.gitopia.v2.MsgUpdateUserUsernameResponse
	(*MsgUpdateUserName)(nil),                       // 142: gitopia.gitopia.gitopia.v2.MsgUpdateUserName
	(*MsgUpdateUserNameResponse)(nil),               // 143: gitopia.gitopia.gitopia.v2.MsgUpdateUserNameResponse
	(*MsgUpdateUserBio)(nil),                        // 144: gitopia.gitopia.gitopia.v2.MsgUpdateUserBio
	(*MsgUpdateUserBioResponse)(nil),                // 145: gitopia.gitopia.gitopia.v2.MsgUpdateUserBioResponse
	(*MsgUpdateUserAvatar)(nil),                     // 146: gitopia.gitopia.gitopia.v2.MsgUpdateUserAvatar
	(*MsgUpdateUserAvatarResponse)(nil),             // 147: gitopia.gitopia.gitopia.v2.MsgUpdateUserAvatarResponse
	(*MsgDeleteUser)(nil),                           // 148: gitopia.gitopia.gitopia.v2.MsgDeleteUser
	(*MsgDeleteUserResponse)(nil),                   // 149: gitopia.gitopia.gitopia.v2.MsgDeleteUserResponse
	(*MsgSetBranch_Branch)(nil),                     // 150: gitopia.gitopia.gitopia.v2.MsgSetBranch.Branch
	(*MsgMultiSetBranch_Branch)(nil),                // 151: gitopia.gitopia.gitopia.v2.MsgMultiSetBranch.Branch
	(*MsgSetTag_Tag)(nil),                           // 152: gitopia.gitopia.gitopia.v2.MsgSetTag.Tag
	(*MsgMultiSetTag_Tag)(nil),                      // 153: gitopia.gitopia.gitopia.v2.MsgMultiSetTag.Tag
	(TaskType)(0),                                   // 154: gitopia.gitopia.gitopia.v2.TaskType
	(TaskState)(0),                                  // 155: gitopia.gitopia.gitopia.v2.TaskState
	(*RepositoryId)(nil),                            // 156: gitopia.gitopia.gitopia.v2.RepositoryId
	(RepositoryBackup_Store)(0),                     // 157: gitopia.gitopia.gitopia.v2.RepositoryBackup.Store
	(MemberRole)(0),                                 // 158: gitopia.gitopia.gitopia.v2.MemberRole
}
var file_gitopia_tx_proto_depIdxs = []int32{
	0,   // 0: gitopia.gitopia.gitopia.v2.MsgRevokeProviderPermission.permission:type_name -> gitopia.gitopia.gitopia.v2.ProviderPermission
	0,   // 1: gitopia.gitopia.gitopia.v2.MsgAuthorizeProvider.permission:type_name -> gitopia.gitopia.gitopia.v2.ProviderPermission
	154, // 2: gitopia.gitopia.gitopia.v2.MsgCreateTask.taskType:type_name -> gitopia.gitopia.gitopia.v2.TaskType
	155, // 3: gitopia.gitopia.gitopia.v2.MsgUpdateTask.state:type_name -> gitopia.gitopia.gitopia.v2.TaskState
	156, // 4: gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryBackupRef.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	157, // 5: gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryBackupRef.store:type_name -> gitopia.gitopia.gitopia.v2.RepositoryBackup.Store
	156, // 6: gitopia.gitopia.gitopia.v2.MsgAddRepositoryBackupRef.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	157, // 7: gitopia.gitopia.gitopia.v2.MsgAddRepositoryBackupRef.store:type_name -> gitopia.gitopia.gitopia.v2.RepositoryBackup.Store
	156, // 8: gitopia.gitopia.gitopia.v2.MsgSetBranch.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	150, // 9: gitopia.gitopia.gitopia.v2.MsgSetBranch.branch:type_name -> gitopia.gitopia.gitopia.v2.MsgSetBranch.Branch
	156, // 10: gitopia.gitopia.gitopia.v2.MsgSetDefaultBranch.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 11: gitopia.gitopia.gitopia.v2.MsgMultiSetBranch.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	151, // 12: gitopia.gitopia.gitopia.v2.MsgMultiSetBranch.branches:type_name -> gitopia.gitopia.gitopia.v2.MsgMultiSetBranch.Branch
	156, // 13: gitopia.gitopia.gitopia.v2.MsgDeleteBranch.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 14: gitopia.gitopia.gitopia.v2.MsgMultiDeleteBranch.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 15: gitopia.gitopia.gitopia.v2.MsgSetTag.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	152, // 16: gitopia.gitopia.gitopia.v2.MsgSetTag.tag:type_name -> gitopia.gitopia.gitopia.v2.MsgSetTag.Tag
	156, // 17: gitopia.gitopia.gitopia.v2.MsgMultiSetTag.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	153, // 18: gitopia.gitopia.gitopia.v2.MsgMultiSetTag.tags:type_name -> gitopia.gitopia.gitopia.v2.MsgMultiSetTag.Tag
	156, // 19: gitopia.gitopia.gitopia.v2.MsgDeleteTag.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 20: gitopia.gitopia.gitopia.v2.MsgMultiDeleteTag.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	158, // 21: gitopia.gitopia.gitopia.v2.MsgAddMember.role:type_name -> gitopia.gitopia.gitopia.v2.MemberRole
	158, // 22: gitopia.gitopia.gitopia.v2.MsgUpdateMemberRole.role:type_name -> gitopia.gitopia.gitopia.v2.MemberRole
	156, // 23: gitopia.gitopia.gitopia.v2.MsgCreateRelease.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 24: gitopia.gitopia.gitopia.v2.MsgCreatePullRequest.headRepositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 25: gitopia.gitopia.gitopia.v2.MsgCreatePullRequest.baseRepositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 26: gitopia.gitopia.gitopia.v2.MsgCreateIssue.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 27: gitopia.gitopia.gitopia.v2.MsgCreateRepositoryResponse.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 28: gitopia.gitopia.gitopia.v2.MsgInvokeForkRepository.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 29: gitopia.gitopia.gitopia.v2.MsgForkRepository.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 30: gitopia.gitopia.gitopia.v2.MsgForkRepositorySuccess.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 31: gitopia.gitopia.gitopia.v2.MsgRenameRepository.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 32: gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryDescription.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 33: gitopia.gitopia.gitopia.v2.MsgChangeOwner.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 34: gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryCollaborator.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 35: gitopia.gitopia.gitopia.v2.MsgRemoveRepositoryCollaborator.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 36: gitopia.gitopia.gitopia.v2.MsgCreateRepositoryLabel.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 37: gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryLabel.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 38: gitopia.gitopia.gitopia.v2.MsgDeleteRepositoryLabel.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 39: gitopia.gitopia.gitopia.v2.MsgToggleRepositoryForking.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 40: gitopia.gitopia.gitopia.v2.MsgToggleArweaveBackup.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	156, // 41: gitopia.gitopia.gitopia.v2.MsgDeleteRepository.repositoryId:type_name -> gitopia.gitopia.gitopia.v2.RepositoryId
	1,   // 42: gitopia.gitopia.gitopia.v2.Msg.RevokeProviderPermission:input_type -> gitopia.gitopia.gitopia.v2.MsgRevokeProviderPermission
	3,   // 43: gitopia.gitopia.gitopia.v2.Msg.AuthorizeProvider:input_type -> gitopia.gitopia.gitopia.v2.MsgAuthorizeProvider
	5,   // 44: gitopia.gitopia.gitopia.v2.Msg.CreateTask:input_type -> gitopia.gitopia.gitopia.v2.MsgCreateTask
	7,   // 45: gitopia.gitopia.gitopia.v2.Msg.UpdateTask:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateTask
	9,   // 46: gitopia.gitopia.gitopia.v2.Msg.DeleteTask:input_type -> gitopia.gitopia.gitopia.v2.MsgDeleteTask
	16,  // 47: gitopia.gitopia.gitopia.v2.Msg.SetBranch:input_type -> gitopia.gitopia.gitopia.v2.MsgSetBranch
	20,  // 48: gitopia.gitopia.gitopia.v2.Msg.MultiSetBranch:input_type -> gitopia.gitopia.gitopia.v2.MsgMultiSetBranch
	22,  // 49: gitopia.gitopia.gitopia.v2.Msg.DeleteBranch:input_type -> gitopia.gitopia.gitopia.v2.MsgDeleteBranch
	24,  // 50: gitopia.gitopia.gitopia.v2.Msg.MultiDeleteBranch:input_type -> gitopia.gitopia.gitopia.v2.MsgMultiDeleteBranch
	26,  // 51: gitopia.gitopia.gitopia.v2.Msg.SetTag:input_type -> gitopia.gitopia.gitopia.v2.MsgSetTag
	28,  // 52: gitopia.gitopia.gitopia.v2.Msg.MultiSetTag:input_type -> gitopia.gitopia.gitopia.v2.MsgMultiSetTag
	30,  // 53: gitopia.gitopia.gitopia.v2.Msg.DeleteTag:input_type -> gitopia.gitopia.gitopia.v2.MsgDeleteTag
	32,  // 54: gitopia.gitopia.gitopia.v2.Msg.MultiDeleteTag:input_type -> gitopia.gitopia.gitopia.v2.MsgMultiDeleteTag
	34,  // 55: gitopia.gitopia.gitopia.v2.Msg.AddMember:input_type -> gitopia.gitopia.gitopia.v2.MsgAddMember
	36,  // 56: gitopia.gitopia.gitopia.v2.Msg.UpdateMemberRole:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateMemberRole
	38,  // 57: gitopia.gitopia.gitopia.v2.Msg.RemoveMember:input_type -> gitopia.gitopia.gitopia.v2.MsgRemoveMember
	40,  // 58: gitopia.gitopia.gitopia.v2.Msg.CreateRelease:input_type -> gitopia.gitopia.gitopia.v2.MsgCreateRelease
	42,  // 59: gitopia.gitopia.gitopia.v2.Msg.UpdateRelease:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateRelease
	44,  // 60: gitopia.gitopia.gitopia.v2.Msg.DeleteRelease:input_type -> gitopia.gitopia.gitopia.v2.MsgDeleteRelease
	46,  // 61: gitopia.gitopia.gitopia.v2.Msg.CreatePullRequest:input_type -> gitopia.gitopia.gitopia.v2.MsgCreatePullRequest
	48,  // 62: gitopia.gitopia.gitopia.v2.Msg.UpdatePullRequestTitle:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdatePullRequestTitle
	50,  // 63: gitopia.gitopia.gitopia.v2.Msg.UpdatePullRequestDescription:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdatePullRequestDescription
	52,  // 64: gitopia.gitopia.gitopia.v2.Msg.InvokeMergePullRequest:input_type -> gitopia.gitopia.gitopia.v2.MsgInvokeMergePullRequest
	54,  // 65: gitopia.gitopia.gitopia.v2.Msg.SetPullRequestState:input_type -> gitopia.gitopia.gitopia.v2.MsgSetPullRequestState
	56,  // 66: gitopia.gitopia.gitopia.v2.Msg.AddPullRequestReviewers:input_type -> gitopia.gitopia.gitopia.v2.MsgAddPullRequestReviewers
	58,  // 67: gitopia.gitopia.gitopia.v2.Msg.RemovePullRequestReviewers:input_type -> gitopia.gitopia.gitopia.v2.MsgRemovePullRequestReviewers
	60,  // 68: gitopia.gitopia.gitopia.v2.Msg.AddPullRequestAssignees:input_type -> gitopia.gitopia.gitopia.v2.MsgAddPullRequestAssignees
	62,  // 69: gitopia.gitopia.gitopia.v2.Msg.RemovePullRequestAssignees:input_type -> gitopia.gitopia.gitopia.v2.MsgRemovePullRequestAssignees
	64,  // 70: gitopia.gitopia.gitopia.v2.Msg.AddPullRequestLabels:input_type -> gitopia.gitopia.gitopia.v2.MsgAddPullRequestLabels
	66,  // 71: gitopia.gitopia.gitopia.v2.Msg.RemovePullRequestLabels:input_type -> gitopia.gitopia.gitopia.v2.MsgRemovePullRequestLabels
	68,  // 72: gitopia.gitopia.gitopia.v2.Msg.DeletePullRequest:input_type -> gitopia.gitopia.gitopia.v2.MsgDeletePullRequest
	70,  // 73: gitopia.gitopia.gitopia.v2.Msg.CreateDao:input_type -> gitopia.gitopia.gitopia.v2.MsgCreateDao
	72,  // 74: gitopia.gitopia.gitopia.v2.Msg.RenameDao:input_type -> gitopia.gitopia.gitopia.v2.MsgRenameDao
	74,  // 75: gitopia.gitopia.gitopia.v2.Msg.UpdateDaoDescription:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateDaoDescription
	76,  // 76: gitopia.gitopia.gitopia.v2.Msg.UpdateDaoWebsite:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateDaoWebsite
	78,  // 77: gitopia.gitopia.gitopia.v2.Msg.UpdateDaoLocation:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateDaoLocation
	80,  // 78: gitopia.gitopia.gitopia.v2.Msg.UpdateDaoAvatar:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateDaoAvatar
	82,  // 79: gitopia.gitopia.gitopia.v2.Msg.DeleteDao:input_type -> gitopia.gitopia.gitopia.v2.MsgDeleteDao
	84,  // 80: gitopia.gitopia.gitopia.v2.Msg.CreateComment:input_type -> gitopia.gitopia.gitopia.v2.MsgCreateComment
	86,  // 81: gitopia.gitopia.gitopia.v2.Msg.UpdateComment:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateComment
	88,  // 82: gitopia.gitopia.gitopia.v2.Msg.DeleteComment:input_type -> gitopia.gitopia.gitopia.v2.MsgDeleteComment
	90,  // 83: gitopia.gitopia.gitopia.v2.Msg.CreateIssue:input_type -> gitopia.gitopia.gitopia.v2.MsgCreateIssue
	92,  // 84: gitopia.gitopia.gitopia.v2.Msg.UpdateIssueTitle:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateIssueTitle
	94,  // 85: gitopia.gitopia.gitopia.v2.Msg.UpdateIssueDescription:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateIssueDescription
	96,  // 86: gitopia.gitopia.gitopia.v2.Msg.ToggleIssueState:input_type -> gitopia.gitopia.gitopia.v2.MsgToggleIssueState
	98,  // 87: gitopia.gitopia.gitopia.v2.Msg.AddIssueAssignees:input_type -> gitopia.gitopia.gitopia.v2.MsgAddIssueAssignees
	100, // 88: gitopia.gitopia.gitopia.v2.Msg.RemoveIssueAssignees:input_type -> gitopia.gitopia.gitopia.v2.MsgRemoveIssueAssignees
	102, // 89: gitopia.gitopia.gitopia.v2.Msg.AddIssueLabels:input_type -> gitopia.gitopia.gitopia.v2.MsgAddIssueLabels
	104, // 90: gitopia.gitopia.gitopia.v2.Msg.RemoveIssueLabels:input_type -> gitopia.gitopia.gitopia.v2.MsgRemoveIssueLabels
	106, // 91: gitopia.gitopia.gitopia.v2.Msg.DeleteIssue:input_type -> gitopia.gitopia.gitopia.v2.MsgDeleteIssue
	108, // 92: gitopia.gitopia.gitopia.v2.Msg.CreateRepository:input_type -> gitopia.gitopia.gitopia.v2.MsgCreateRepository
	110, // 93: gitopia.gitopia.gitopia.v2.Msg.InvokeForkRepository:input_type -> gitopia.gitopia.gitopia.v2.MsgInvokeForkRepository
	112, // 94: gitopia.gitopia.gitopia.v2.Msg.ForkRepository:input_type -> gitopia.gitopia.gitopia.v2.MsgForkRepository
	114, // 95: gitopia.gitopia.gitopia.v2.Msg.ForkRepositorySuccess:input_type -> gitopia.gitopia.gitopia.v2.MsgForkRepositorySuccess
	116, // 96: gitopia.gitopia.gitopia.v2.Msg.RenameRepository:input_type -> gitopia.gitopia.gitopia.v2.MsgRenameRepository
	118, // 97: gitopia.gitopia.gitopia.v2.Msg.UpdateRepositoryDescription:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryDescription
	120, // 98: gitopia.gitopia.gitopia.v2.Msg.ChangeOwner:input_type -> gitopia.gitopia.gitopia.v2.MsgChangeOwner
	122, // 99: gitopia.gitopia.gitopia.v2.Msg.UpdateRepositoryCollaborator:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryCollaborator
	124, // 100: gitopia.gitopia.gitopia.v2.Msg.RemoveRepositoryCollaborator:input_type -> gitopia.gitopia.gitopia.v2.MsgRemoveRepositoryCollaborator
	126, // 101: gitopia.gitopia.gitopia.v2.Msg.CreateRepositoryLabel:input_type -> gitopia.gitopia.gitopia.v2.MsgCreateRepositoryLabel
	128, // 102: gitopia.gitopia.gitopia.v2.Msg.UpdateRepositoryLabel:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryLabel
	130, // 103: gitopia.gitopia.gitopia.v2.Msg.DeleteRepositoryLabel:input_type -> gitopia.gitopia.gitopia.v2.MsgDeleteRepositoryLabel
	18,  // 104: gitopia.gitopia.gitopia.v2.Msg.SetDefaultBranch:input_type -> gitopia.gitopia.gitopia.v2.MsgSetDefaultBranch
	132, // 105: gitopia.gitopia.gitopia.v2.Msg.ToggleRepositoryForking:input_type -> gitopia.gitopia.gitopia.v2.MsgToggleRepositoryForking
	134, // 106: gitopia.gitopia.gitopia.v2.Msg.ToggleArweaveBackup:input_type -> gitopia.gitopia.gitopia.v2.MsgToggleArweaveBackup
	136, // 107: gitopia.gitopia.gitopia.v2.Msg.DeleteRepository:input_type -> gitopia.gitopia.gitopia.v2.MsgDeleteRepository
	138, // 108: gitopia.gitopia.gitopia.v2.Msg.CreateUser:input_type -> gitopia.gitopia.gitopia.v2.MsgCreateUser
	140, // 109: gitopia.gitopia.gitopia.v2.Msg.UpdateUserUsername:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateUserUsername
	142, // 110: gitopia.gitopia.gitopia.v2.Msg.UpdateUserName:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateUserName
	144, // 111: gitopia.gitopia.gitopia.v2.Msg.UpdateUserBio:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateUserBio
	146, // 112: gitopia.gitopia.gitopia.v2.Msg.UpdateUserAvatar:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateUserAvatar
	148, // 113: gitopia.gitopia.gitopia.v2.Msg.DeleteUser:input_type -> gitopia.gitopia.gitopia.v2.MsgDeleteUser
	10,  // 114: gitopia.gitopia.gitopia.v2.Msg.UpdateRepositoryBackupRef:input_type -> gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryBackupRef
	12,  // 115: gitopia.gitopia.gitopia.v2.Msg.AddRepositoryBackupRef:input_type -> gitopia.gitopia.gitopia.v2.MsgAddRepositoryBackupRef
	2,   // 116: gitopia.gitopia.gitopia.v2.Msg.RevokeProviderPermission:output_type -> gitopia.gitopia.gitopia.v2.MsgRevokeProviderPermissionResponse
	4,   // 117: gitopia.gitopia.gitopia.v2.Msg.AuthorizeProvider:output_type -> gitopia.gitopia.gitopia.v2.MsgAuthorizeProviderResponse
	6,   // 118: gitopia.gitopia.gitopia.v2.Msg.CreateTask:output_type -> gitopia.gitopia.gitopia.v2.MsgCreateTaskResponse
	8,   // 119: gitopia.gitopia.gitopia.v2.Msg.UpdateTask:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateTaskResponse
	14,  // 120: gitopia.gitopia.gitopia.v2.Msg.DeleteTask:output_type -> gitopia.gitopia.gitopia.v2.MsgDeleteTaskResponse
	17,  // 121: gitopia.gitopia.gitopia.v2.Msg.SetBranch:output_type -> gitopia.gitopia.gitopia.v2.MsgSetBranchResponse
	21,  // 122: gitopia.gitopia.gitopia.v2.Msg.MultiSetBranch:output_type -> gitopia.gitopia.gitopia.v2.MsgMultiSetBranchResponse
	23,  // 123: gitopia.gitopia.gitopia.v2.Msg.DeleteBranch:output_type -> gitopia.gitopia.gitopia.v2.MsgDeleteBranchResponse
	25,  // 124: gitopia.gitopia.gitopia.v2.Msg.MultiDeleteBranch:output_type -> gitopia.gitopia.gitopia.v2.MsgMultiDeleteBranchResponse
	27,  // 125: gitopia.gitopia.gitopia.v2.Msg.SetTag:output_type -> gitopia.gitopia.gitopia.v2.MsgSetTagResponse
	29,  // 126: gitopia.gitopia.gitopia.v2.Msg.MultiSetTag:output_type -> gitopia.gitopia.gitopia.v2.MsgMultiSetTagResponse
	31,  // 127: gitopia.gitopia.gitopia.v2.Msg.DeleteTag:output_type -> gitopia.gitopia.gitopia.v2.MsgDeleteTagResponse
	33,  // 128: gitopia.gitopia.gitopia.v2.Msg.MultiDeleteTag:output_type -> gitopia.gitopia.gitopia.v2.MsgMultiDeleteTagResponse
	35,  // 129: gitopia.gitopia.gitopia.v2.Msg.AddMember:output_type -> gitopia.gitopia.gitopia.v2.MsgAddMemberResponse
	37,  // 130: gitopia.gitopia.gitopia.v2.Msg.UpdateMemberRole:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateMemberRoleResponse
	39,  // 131: gitopia.gitopia.gitopia.v2.Msg.RemoveMember:output_type -> gitopia.gitopia.gitopia.v2.MsgRemoveMemberResponse
	41,  // 132: gitopia.gitopia.gitopia.v2.Msg.CreateRelease:output_type -> gitopia.gitopia.gitopia.v2.MsgCreateReleaseResponse
	43,  // 133: gitopia.gitopia.gitopia.v2.Msg.UpdateRelease:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateReleaseResponse
	45,  // 134: gitopia.gitopia.gitopia.v2.Msg.DeleteRelease:output_type -> gitopia.gitopia.gitopia.v2.MsgDeleteReleaseResponse
	47,  // 135: gitopia.gitopia.gitopia.v2.Msg.CreatePullRequest:output_type -> gitopia.gitopia.gitopia.v2.MsgCreatePullRequestResponse
	49,  // 136: gitopia.gitopia.gitopia.v2.Msg.UpdatePullRequestTitle:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdatePullRequestTitleResponse
	51,  // 137: gitopia.gitopia.gitopia.v2.Msg.UpdatePullRequestDescription:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdatePullRequestDescriptionResponse
	53,  // 138: gitopia.gitopia.gitopia.v2.Msg.InvokeMergePullRequest:output_type -> gitopia.gitopia.gitopia.v2.MsgInvokeMergePullRequestResponse
	55,  // 139: gitopia.gitopia.gitopia.v2.Msg.SetPullRequestState:output_type -> gitopia.gitopia.gitopia.v2.MsgSetPullRequestStateResponse
	57,  // 140: gitopia.gitopia.gitopia.v2.Msg.AddPullRequestReviewers:output_type -> gitopia.gitopia.gitopia.v2.MsgAddPullRequestReviewersResponse
	59,  // 141: gitopia.gitopia.gitopia.v2.Msg.RemovePullRequestReviewers:output_type -> gitopia.gitopia.gitopia.v2.MsgRemovePullRequestReviewersResponse
	61,  // 142: gitopia.gitopia.gitopia.v2.Msg.AddPullRequestAssignees:output_type -> gitopia.gitopia.gitopia.v2.MsgAddPullRequestAssigneesResponse
	63,  // 143: gitopia.gitopia.gitopia.v2.Msg.RemovePullRequestAssignees:output_type -> gitopia.gitopia.gitopia.v2.MsgRemovePullRequestAssigneesResponse
	65,  // 144: gitopia.gitopia.gitopia.v2.Msg.AddPullRequestLabels:output_type -> gitopia.gitopia.gitopia.v2.MsgAddPullRequestLabelsResponse
	67,  // 145: gitopia.gitopia.gitopia.v2.Msg.RemovePullRequestLabels:output_type -> gitopia.gitopia.gitopia.v2.MsgRemovePullRequestLabelsResponse
	69,  // 146: gitopia.gitopia.gitopia.v2.Msg.DeletePullRequest:output_type -> gitopia.gitopia.gitopia.v2.MsgDeletePullRequestResponse
	71,  // 147: gitopia.gitopia.gitopia.v2.Msg.CreateDao:output_type -> gitopia.gitopia.gitopia.v2.MsgCreateDaoResponse
	73,  // 148: gitopia.gitopia.gitopia.v2.Msg.RenameDao:output_type -> gitopia.gitopia.gitopia.v2.MsgRenameDaoResponse
	75,  // 149: gitopia.gitopia.gitopia.v2.Msg.UpdateDaoDescription:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateDaoDescriptionResponse
	77,  // 150: gitopia.gitopia.gitopia.v2.Msg.UpdateDaoWebsite:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateDaoWebsiteResponse
	79,  // 151: gitopia.gitopia.gitopia.v2.Msg.UpdateDaoLocation:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateDaoLocationResponse
	81,  // 152: gitopia.gitopia.gitopia.v2.Msg.UpdateDaoAvatar:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateDaoAvatarResponse
	83,  // 153: gitopia.gitopia.gitopia.v2.Msg.DeleteDao:output_type -> gitopia.gitopia.gitopia.v2.MsgDeleteDaoResponse
	85,  // 154: gitopia.gitopia.gitopia.v2.Msg.CreateComment:output_type -> gitopia.gitopia.gitopia.v2.MsgCreateCommentResponse
	87,  // 155: gitopia.gitopia.gitopia.v2.Msg.UpdateComment:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateCommentResponse
	89,  // 156: gitopia.gitopia.gitopia.v2.Msg.DeleteComment:output_type -> gitopia.gitopia.gitopia.v2.MsgDeleteCommentResponse
	91,  // 157: gitopia.gitopia.gitopia.v2.Msg.CreateIssue:output_type -> gitopia.gitopia.gitopia.v2.MsgCreateIssueResponse
	93,  // 158: gitopia.gitopia.gitopia.v2.Msg.UpdateIssueTitle:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateIssueTitleResponse
	95,  // 159: gitopia.gitopia.gitopia.v2.Msg.UpdateIssueDescription:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateIssueDescriptionResponse
	97,  // 160: gitopia.gitopia.gitopia.v2.Msg.ToggleIssueState:output_type -> gitopia.gitopia.gitopia.v2.MsgToggleIssueStateResponse
	99,  // 161: gitopia.gitopia.gitopia.v2.Msg.AddIssueAssignees:output_type -> gitopia.gitopia.gitopia.v2.MsgAddIssueAssigneesResponse
	101, // 162: gitopia.gitopia.gitopia.v2.Msg.RemoveIssueAssignees:output_type -> gitopia.gitopia.gitopia.v2.MsgRemoveIssueAssigneesResponse
	103, // 163: gitopia.gitopia.gitopia.v2.Msg.AddIssueLabels:output_type -> gitopia.gitopia.gitopia.v2.MsgAddIssueLabelsResponse
	105, // 164: gitopia.gitopia.gitopia.v2.Msg.RemoveIssueLabels:output_type -> gitopia.gitopia.gitopia.v2.MsgRemoveIssueLabelsResponse
	107, // 165: gitopia.gitopia.gitopia.v2.Msg.DeleteIssue:output_type -> gitopia.gitopia.gitopia.v2.MsgDeleteIssueResponse
	109, // 166: gitopia.gitopia.gitopia.v2.Msg.CreateRepository:output_type -> gitopia.gitopia.gitopia.v2.MsgCreateRepositoryResponse
	111, // 167: gitopia.gitopia.gitopia.v2.Msg.InvokeForkRepository:output_type -> gitopia.gitopia.gitopia.v2.MsgInvokeForkRepositoryResponse
	113, // 168: gitopia.gitopia.gitopia.v2.Msg.ForkRepository:output_type -> gitopia.gitopia.gitopia.v2.MsgForkRepositoryResponse
	115, // 169: gitopia.gitopia.gitopia.v2.Msg.ForkRepositorySuccess:output_type -> gitopia.gitopia.gitopia.v2.MsgForkRepositorySuccessResponse
	117, // 170: gitopia.gitopia.gitopia.v2.Msg.RenameRepository:output_type -> gitopia.gitopia.gitopia.v2.MsgRenameRepositoryResponse
	119, // 171: gitopia.gitopia.gitopia.v2.Msg.UpdateRepositoryDescription:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryDescriptionResponse
	121, // 172: gitopia.gitopia.gitopia.v2.Msg.ChangeOwner:output_type -> gitopia.gitopia.gitopia.v2.MsgChangeOwnerResponse
	123, // 173: gitopia.gitopia.gitopia.v2.Msg.UpdateRepositoryCollaborator:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryCollaboratorResponse
	125, // 174: gitopia.gitopia.gitopia.v2.Msg.RemoveRepositoryCollaborator:output_type -> gitopia.gitopia.gitopia.v2.MsgRemoveRepositoryCollaboratorResponse
	127, // 175: gitopia.gitopia.gitopia.v2.Msg.CreateRepositoryLabel:output_type -> gitopia.gitopia.gitopia.v2.MsgCreateRepositoryLabelResponse
	129, // 176: gitopia.gitopia.gitopia.v2.Msg.UpdateRepositoryLabel:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryLabelResponse
	131, // 177: gitopia.gitopia.gitopia.v2.Msg.DeleteRepositoryLabel:output_type -> gitopia.gitopia.gitopia.v2.MsgDeleteRepositoryLabelResponse
	19,  // 178: gitopia.gitopia.gitopia.v2.Msg.SetDefaultBranch:output_type -> gitopia.gitopia.gitopia.v2.MsgSetDefaultBranchResponse
	133, // 179: gitopia.gitopia.gitopia.v2.Msg.ToggleRepositoryForking:output_type -> gitopia.gitopia.gitopia.v2.MsgToggleRepositoryForkingResponse
	135, // 180: gitopia.gitopia.gitopia.v2.Msg.ToggleArweaveBackup:output_type -> gitopia.gitopia.gitopia.v2.MsgToggleArweaveBackupResponse
	137, // 181: gitopia.gitopia.gitopia.v2.Msg.DeleteRepository:output_type -> gitopia.gitopia.gitopia.v2.MsgDeleteRepositoryResponse
	139, // 182: gitopia.gitopia.gitopia.v2.Msg.CreateUser:output_type -> gitopia.gitopia.gitopia.v2.MsgCreateUserResponse
	141, // 183: gitopia.gitopia.gitopia.v2.Msg.UpdateUserUsername:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateUserUsernameResponse
	143, // 184: gitopia.gitopia.gitopia.v2.Msg.UpdateUserName:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateUserNameResponse
	145, // 185: gitopia.gitopia.gitopia.v2.Msg.UpdateUserBio:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateUserBioResponse
	147, // 186: gitopia.gitopia.gitopia.v2.Msg.UpdateUserAvatar:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateUserAvatarResponse
	149, // 187: gitopia.gitopia.gitopia.v2.Msg.DeleteUser:output_type -> gitopia.gitopia.gitopia.v2.MsgDeleteUserResponse
	11,  // 188: gitopia.gitopia.gitopia.v2.Msg.UpdateRepositoryBackupRef:output_type -> gitopia.gitopia.gitopia.v2.MsgUpdateRepositoryBackupRefResponse
	13,  // 189: gitopia.gitopia.gitopia.v2.Msg.AddRepositoryBackupRef:output_type -> gitopia.gitopia.gitopia.v2.MsgAddRepositoryBackupRefResponse
	116, // [116:190] is the sub-list for method output_type
	42,  // [42:116] is the sub-list for method input_type
	42,  // [42:42] is the sub-list for extension type_name
	42,  // [42:42] is the sub-list for extension extendee
	0,   // [0:42] is the sub-list for field type_name
}

func init() { file_gitopia_tx_proto_init() }
func file_gitopia_tx_proto_init() {
	if File_gitopia_tx_proto != nil {
		return
	}
	file_gitopia_task_proto_init()
	file_gitopia_branch_proto_init()
	file_gitopia_tag_proto_init()
	file_gitopia_member_proto_init()
	file_gitopia_release_proto_init()
	file_gitopia_pullRequest_proto_init()
	file_gitopia_dao_proto_init()
	file_gitopia_comment_proto_init()
	file_gitopia_issue_proto_init()
	file_gitopia_repository_proto_init()
	file_gitopia_whois_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gitopia_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRevokeProviderPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRevokeProviderPermissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAuthorizeProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAuthorizeProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateRepositoryBackupRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateRepositoryBackupRefResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddRepositoryBackupRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddRepositoryBackupRefResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteStorageProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetBranch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetBranchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetDefaultBranch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetDefaultBranchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMultiSetBranch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMultiSetBranchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteBranch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteBranchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMultiDeleteBranch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMultiDeleteBranchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMultiSetTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMultiSetTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMultiDeleteTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMultiDeleteTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateMemberRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateMemberRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemoveMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemoveMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateReleaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateReleaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteReleaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreatePullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreatePullRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdatePullRequestTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdatePullRequestTitleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdatePullRequestDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdatePullRequestDescriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgInvokeMergePullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgInvokeMergePullRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetPullRequestState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetPullRequestStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddPullRequestReviewers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddPullRequestReviewersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemovePullRequestReviewers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemovePullRequestReviewersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddPullRequestAssignees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddPullRequestAssigneesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemovePullRequestAssignees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemovePullRequestAssigneesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddPullRequestLabels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddPullRequestLabelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemovePullRequestLabels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemovePullRequestLabelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeletePullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeletePullRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateDaoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRenameDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRenameDaoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateDaoDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateDaoDescriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateDaoWebsite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateDaoWebsiteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateDaoLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateDaoLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateDaoAvatar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateDaoAvatarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteDao); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteDaoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateIssue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateIssueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateIssueTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateIssueTitleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateIssueDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateIssueDescriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgToggleIssueState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgToggleIssueStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddIssueAssignees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddIssueAssigneesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemoveIssueAssignees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemoveIssueAssigneesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddIssueLabels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAddIssueLabelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemoveIssueLabels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemoveIssueLabelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteIssue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteIssueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateRepositoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgInvokeForkRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgInvokeForkRepositoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgForkRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgForkRepositoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgForkRepositorySuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgForkRepositorySuccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRenameRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRenameRepositoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateRepositoryDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateRepositoryDescriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChangeOwner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChangeOwnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateRepositoryCollaborator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateRepositoryCollaboratorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemoveRepositoryCollaborator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemoveRepositoryCollaboratorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateRepositoryLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateRepositoryLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateRepositoryLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateRepositoryLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteRepositoryLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteRepositoryLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgToggleRepositoryForking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgToggleRepositoryForkingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgToggleArweaveBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgToggleArweaveBackupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteRepositoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateUserUsername); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateUserUsernameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateUserName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateUserNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateUserBio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateUserBioResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateUserAvatar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateUserAvatarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetBranch_Branch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMultiSetBranch_Branch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetTag_Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitopia_tx_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMultiSetTag_Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gitopia_tx_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   153,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gitopia_tx_proto_goTypes,
		DependencyIndexes: file_gitopia_tx_proto_depIdxs,
		EnumInfos:         file_gitopia_tx_proto_enumTypes,
		MessageInfos:      file_gitopia_tx_proto_msgTypes,
	}.Build()
	File_gitopia_tx_proto = out.File
	file_gitopia_tx_proto_rawDesc = nil
	file_gitopia_tx_proto_goTypes = nil
	file_gitopia_tx_proto_depIdxs = nil
}
